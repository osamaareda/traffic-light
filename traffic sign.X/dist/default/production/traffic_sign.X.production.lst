

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 01 01:24:18 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,inline
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Generated 23/03/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4620 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76                           	psect	idataCOMRAM
    77   001BF8                     __pidataCOMRAM:
    78                           	callstack 0
    79                           
    80                           ;initializer for _latx
    81   001BF8  89                 	db	137
    82   001BF9  0F                 	db	15
    83   001BFA  8A                 	db	138
    84   001BFB  0F                 	db	15
    85   001BFC  8B                 	db	139
    86   001BFD  0F                 	db	15
    87   001BFE  8C                 	db	140
    88   001BFF  0F                 	db	15
    89   001C00  8D                 	db	141
    90   001C01  0F                 	db	15
    91                           
    92                           ;initializer for _green_counter
    93   001C02  3D                 	db	61
    94                           
    95                           ;initializer for _red_counter
    96   001C03  3C                 	db	60
    97                           
    98                           ;initializer for _RB7_Flag
    99   001C04  01                 	db	1
   100                           
   101                           ;initializer for _RB6_Flag
   102   001C05  01                 	db	1
   103                           
   104                           ;initializer for _RB5_Flag
   105   001C06  01                 	db	1
   106                           
   107                           ;initializer for _RB4_Flag
   108   001C07  01                 	db	1
   109                           
   110                           ;initializer for _n
   111   001C08  04                 	db	4
   112                           
   113                           ;initializer for _seg_green2
   114   001C09  21                 	db	33
   115   001C0A  29                 	db	41
   116   001C0B  31                 	db	49
   117   001C0C  39                 	db	57
   118   001C0D  00                 	db	0
   119                           
   120                           ;initializer for _seg_green1
   121   001C0E  01                 	db	1
   122   001C0F  09                 	db	9
   123   001C10  11                 	db	17
   124   001C11  19                 	db	25
   125   001C12  00                 	db	0
   126                           
   127                           ;initializer for _seg_red2
   128   001C13  23                 	db	35
   129   001C14  2B                 	db	43
   130   001C15  33                 	db	51
   131   001C16  3B                 	db	59
   132   001C17  00                 	db	0
   133                           
   134                           ;initializer for _seg_red1
   135   001C18  03                 	db	3
   136   001C19  0B                 	db	11
   137   001C1A  13                 	db	19
   138   001C1B  1B                 	db	27
   139   001C1C  00                 	db	0
   140                           
   141                           ;initializer for _led_yellow
   142   001C1D  0A                 	db	10
   143   001C1E  00                 	db	0
   144                           
   145                           ;initializer for _led_green
   146   001C1F  12                 	db	18
   147   001C20  00                 	db	0
   148                           
   149                           ;initializer for _led_red
   150   001C21  02                 	db	2
   151   001C22  00                 	db	0
   152                           
   153                           	psect	idataBANK0
   154   001C23                     __pidataBANK0:
   155                           	callstack 0
   156                           
   157                           ;initializer for _portx
   158   001C23  80                 	db	128
   159   001C24  0F                 	db	15
   160   001C25  81                 	db	129
   161   001C26  0F                 	db	15
   162   001C27  82                 	db	130
   163   001C28  0F                 	db	15
   164   001C29  83                 	db	131
   165   001C2A  0F                 	db	15
   166   001C2B  84                 	db	132
   167   001C2C  0F                 	db	15
   168                           
   169                           ;initializer for _trisx
   170   001C2D  92                 	db	146
   171   001C2E  0F                 	db	15
   172   001C2F  93                 	db	147
   173   001C30  0F                 	db	15
   174   001C31  94                 	db	148
   175   001C32  0F                 	db	15
   176   001C33  95                 	db	149
   177   001C34  0F                 	db	15
   178   001C35  96                 	db	150
   179   001C36  0F                 	db	15
   180                           
   181                           ;initializer for _timer0
   182   001C37  06                 	db	low _MY_TMR0_ISR
   183   001C38  10                 	db	high _MY_TMR0_ISR
   184   001C39  00                 	db	0
   185   001C3A  04                 	db	4
   186   001C3B  0BDC               	dw	3036
   187   001C3D  04                 	db	4
   188   000000                     _TMR0L	set	4054
   189   000000                     _TMR0H	set	4055
   190   000000                     _INTCON2bits	set	4081
   191   000000                     _PORTE	set	3972
   192   000000                     _PORTD	set	3971
   193   000000                     _PORTC	set	3970
   194   000000                     _PORTB	set	3969
   195   000000                     _PORTA	set	3968
   196   000000                     _LATA	set	3977
   197   000000                     _TRISA	set	3986
   198   000000                     _T0CONbits	set	4053
   199   000000                     _INTCON3bits	set	4080
   200   000000                     _INTCONbits	set	4082
   201   000000                     _TRISE	set	3990
   202   000000                     _TRISD	set	3989
   203   000000                     _TRISC	set	3988
   204   000000                     _TRISB	set	3987
   205   000000                     _LATE	set	3981
   206   000000                     _LATD	set	3980
   207   000000                     _LATC	set	3979
   208   000000                     _LATB	set	3978
   209                           
   210                           	psect	smallconst
   211   001000                     __psmallconst:
   212                           	callstack 0
   213   001000  00                 	db	0
   214   001001                     STR_1:
   215   001001  25                 	db	37
   216   001002  69                 	db	105	;'i'
   217   001003  00                 	db	0
   218   001004  00                 	db	0	; dummy byte at the end
   219   000000                     
   220                           ; #config settings
   221                           
   222                           	psect	cinit
   223   001958                     __pcinit:
   224                           	callstack 0
   225   001958                     start_initialization:
   226                           	callstack 0
   227   001958                     __initialization:
   228                           	callstack 0
   229                           
   230                           ; Initialize objects allocated to BANK0 (27 bytes)
   231                           ; load TBLPTR registers with __pidataBANK0
   232   001958  0E23               	movlw	low __pidataBANK0
   233   00195A  6EF6               	movwf	tblptrl,c
   234   00195C  0E1C               	movlw	high __pidataBANK0
   235   00195E  6EF7               	movwf	tblptrh,c
   236   001960  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   237   001962  6EF8               	movwf	tblptru,c
   238   001964  EE00  F080         	lfsr	0,__pdataBANK0
   239   001968  EE10 F01B          	lfsr	1,27
   240   00196C                     copy_data0:
   241   00196C  0009               	tblrd		*+
   242   00196E  CFF5 FFEE          	movff	tablat,postinc0
   243   001972  50E5               	movf	postdec1,w,c
   244   001974  50E1               	movf	fsr1l,w,c
   245   001976  E1FA               	bnz	copy_data0
   246                           
   247                           ; Initialize objects allocated to COMRAM (43 bytes)
   248                           ; load TBLPTR registers with __pidataCOMRAM
   249   001978  0EF8               	movlw	low __pidataCOMRAM
   250   00197A  6EF6               	movwf	tblptrl,c
   251   00197C  0E1B               	movlw	high __pidataCOMRAM
   252   00197E  6EF7               	movwf	tblptrh,c
   253   001980  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   254   001982  6EF8               	movwf	tblptru,c
   255   001984  EE00  F001         	lfsr	0,__pdataCOMRAM
   256   001988  EE10 F02B          	lfsr	1,43
   257   00198C                     copy_data1:
   258   00198C  0009               	tblrd		*+
   259   00198E  CFF5 FFEE          	movff	tablat,postinc0
   260   001992  50E5               	movf	postdec1,w,c
   261   001994  50E1               	movf	fsr1l,w,c
   262   001996  E1FA               	bnz	copy_data1
   263                           
   264                           ; Clear objects allocated to COMRAM (42 bytes)
   265   001998  EE00  F02C         	lfsr	0,__pbssCOMRAM
   266   00199C  0E2A               	movlw	42
   267   00199E                     clear_0:
   268   00199E  6AEE               	clrf	postinc0,c
   269   0019A0  06E8               	decf	wreg,f,c
   270   0019A2  E1FD               	bnz	clear_0
   271   0019A4                     end_of_initialization:
   272                           	callstack 0
   273   0019A4                     __end_of__initialization:
   274                           	callstack 0
   275   0019A4  906B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   276   0019A6  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   277   0019A8  0100               	movlb	0
   278   0019AA  EF1F  F00E         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMRAM
   281   00002C                     __pbssCOMRAM:
   282                           	callstack 0
   283   00002C                     	ds	6
   284   000032                     _timer0_preload:
   285                           	callstack 0
   286   000032                     	ds	2
   287   000034                     _TMR0_InterruptHandler:
   288                           	callstack 0
   289   000034                     	ds	2
   290   000036                     _RB7_InterruptHandler_low:
   291                           	callstack 0
   292   000036                     	ds	2
   293   000038                     _RB7_InterruptHandler_high:
   294                           	callstack 0
   295   000038                     	ds	2
   296   00003A                     _RB6_InterruptHandler_low:
   297                           	callstack 0
   298   00003A                     	ds	2
   299   00003C                     _RB6_InterruptHandler_high:
   300                           	callstack 0
   301   00003C                     	ds	2
   302   00003E                     _RB5_InterruptHandler_low:
   303                           	callstack 0
   304   00003E                     	ds	2
   305   000040                     _RB5_InterruptHandler_high:
   306                           	callstack 0
   307   000040                     	ds	2
   308   000042                     _RB4_InterruptHandler_low:
   309                           	callstack 0
   310   000042                     	ds	2
   311   000044                     _RB4_InterruptHandler_high:
   312                           	callstack 0
   313   000044                     	ds	2
   314   000046                     _INT2_InterruptHandler:
   315                           	callstack 0
   316   000046                     	ds	2
   317   000048                     _INT1_InterruptHandler:
   318                           	callstack 0
   319   000048                     	ds	2
   320   00004A                     _INT0_InterruptHandler:
   321                           	callstack 0
   322   00004A                     	ds	2
   323   00004C                     _ret:
   324                           	callstack 0
   325   00004C                     	ds	1
   326   00004D                     	ds	1
   327   00004E                     	ds	1
   328   00004F                     	ds	1
   329   000050                     	ds	1
   330   000051                     lcd_send_custom_char@counter:
   331                           	callstack 0
   332   000051                     	ds	1
   333   000052                     seven_segment_write@counter:
   334                           	callstack 0
   335   000052                     	ds	1
   336   000053                     seven_segment_init@counter:
   337                           	callstack 0
   338   000053                     	ds	1
   339   000054                     lcd_send_number_pos@number:
   340                           	callstack 0
   341   000054                     	ds	1
   342   000055                     lcd_send_number@number:
   343                           	callstack 0
   344   000055                     	ds	1
   345                           
   346                           	psect	dataCOMRAM
   347   000001                     __pdataCOMRAM:
   348                           	callstack 0
   349   000001                     _latx:
   350                           	callstack 0
   351   000001                     	ds	10
   352   00000B                     _green_counter:
   353                           	callstack 0
   354   00000B                     	ds	1
   355   00000C                     _red_counter:
   356                           	callstack 0
   357   00000C                     	ds	1
   358   00000D                     _RB7_Flag:
   359                           	callstack 0
   360   00000D                     	ds	1
   361   00000E                     _RB6_Flag:
   362                           	callstack 0
   363   00000E                     	ds	1
   364   00000F                     _RB5_Flag:
   365                           	callstack 0
   366   00000F                     	ds	1
   367   000010                     _RB4_Flag:
   368                           	callstack 0
   369   000010                     	ds	1
   370   000011                     _n:
   371                           	callstack 0
   372   000011                     	ds	1
   373   000012                     _seg_green2:
   374                           	callstack 0
   375   000012                     	ds	5
   376   000017                     _seg_green1:
   377                           	callstack 0
   378   000017                     	ds	5
   379   00001C                     _seg_red2:
   380                           	callstack 0
   381   00001C                     	ds	5
   382   000021                     _seg_red1:
   383                           	callstack 0
   384   000021                     	ds	5
   385   000026                     _led_yellow:
   386                           	callstack 0
   387   000026                     	ds	2
   388   000028                     _led_green:
   389                           	callstack 0
   390   000028                     	ds	2
   391   00002A                     _led_red:
   392                           	callstack 0
   393   00002A                     	ds	2
   394                           
   395                           	psect	dataBANK0
   396   000080                     __pdataBANK0:
   397                           	callstack 0
   398   000080                     _portx:
   399                           	callstack 0
   400   000080                     	ds	10
   401   00008A                     _trisx:
   402                           	callstack 0
   403   00008A                     	ds	10
   404   000094                     _timer0:
   405                           	callstack 0
   406   000094                     	ds	7
   407                           
   408                           	psect	cstackBANK0
   409   00009B                     __pcstackBANK0:
   410                           	callstack 0
   411   00009B                     gpio_pin_direction_init@pin:
   412                           	callstack 0
   413   00009B                     gpio_pin_logic_write@pin:
   414                           	callstack 0
   415   00009B                     Timer0_Prescaler_Config@_timer:
   416                           	callstack 0
   417   00009B                     Timer0_Mode_Select@_timer:
   418                           	callstack 0
   419   00009B                     Timer0_Register_Size_Config@_timer:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x0
   423   00009B                     	ds	1
   424   00009C                     ??_Timer0_Prescaler_Config:
   425   00009C                     gpio_pin_direction_init@pin_direction:
   426                           	callstack 0
   427   00009C                     gpio_pin_logic_write@pin_logic:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x1
   431   00009C                     	ds	1
   432   00009D                     ??_gpio_pin_logic_write:
   433   00009D                     ??_gpio_pin_direction_init:
   434   00009D                     Timer0_Init@_timer:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x2
   438   00009D                     	ds	1
   439   00009E                     ??_Timer0_Init:
   440                           
   441                           ; 1 bytes @ 0x3
   442   00009E                     	ds	2
   443   0000A0                     Timer0_Init@ret:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x5
   447   0000A0                     	ds	2
   448   0000A2                     gpio_pin_direction_init@ret:
   449                           	callstack 0
   450   0000A2                     gpio_pin_logic_write@ret:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x7
   454   0000A2                     	ds	1
   455   0000A3                     gpio_pin_output_low_init@pin:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x8
   459   0000A3                     	ds	1
   460   0000A4                     ??_gpio_pin_output_low_init:
   461                           
   462                           ; 1 bytes @ 0x9
   463   0000A4                     	ds	1
   464   0000A5                     gpio_pin_output_low_init@gpio_ret:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0xA
   468   0000A5                     	ds	1
   469   0000A6                     gpio_pin_output_low_init@ret:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0xB
   473   0000A6                     	ds	1
   474   0000A7                     seven_segment_init@seg:
   475                           	callstack 0
   476   0000A7                     led_init@led:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0xC
   480   0000A7                     	ds	1
   481   0000A8                     seven_segment_init@gpio_ret:
   482                           	callstack 0
   483   0000A8                     led_init@gpio_ret:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0xD
   487   0000A8                     	ds	1
   488   0000A9                     seven_segment_init@ret:
   489                           	callstack 0
   490   0000A9                     led_init@ret:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0xE
   494   0000A9                     	ds	1
   495   0000AA                     
   496                           ; 1 bytes @ 0xF
   497                           
   498                           	psect	cstackCOMRAM
   499   000056                     __pcstackCOMRAM:
   500                           	callstack 0
   501   000056                     ?___awdiv:
   502                           	callstack 0
   503   000056                     ?___awmod:
   504                           	callstack 0
   505   000056                     i2gpio_pin_logic_write@pin:
   506                           	callstack 0
   507   000056                     ___awdiv@dividend:
   508                           	callstack 0
   509   000056                     ___awmod@dividend:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x0
   513   000056                     	ds	1
   514   000057                     i2gpio_pin_logic_write@pin_logic:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x1
   518   000057                     	ds	1
   519   000058                     ??i2_gpio_pin_logic_write:
   520   000058                     ___awdiv@divisor:
   521                           	callstack 0
   522   000058                     ___awmod@divisor:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x2
   526   000058                     	ds	2
   527   00005A                     ___awdiv@counter:
   528                           	callstack 0
   529   00005A                     ___awmod@counter:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x4
   533   00005A                     	ds	1
   534   00005B                     ___awdiv@sign:
   535                           	callstack 0
   536   00005B                     ___awmod@sign:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x5
   540   00005B                     	ds	1
   541   00005C                     ___awdiv@quotient:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x6
   545   00005C                     	ds	1
   546   00005D                     i2gpio_pin_logic_write@ret:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x7
   550   00005D                     	ds	1
   551   00005E                     seven_segment_write@seg:
   552                           	callstack 0
   553   00005E                     led_on@led:
   554                           	callstack 0
   555   00005E                     led_off@led:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x8
   559   00005E                     	ds	1
   560   00005F                     seven_segment_write@num:
   561                           	callstack 0
   562   00005F                     led_on@gpio_ret:
   563                           	callstack 0
   564   00005F                     led_off@gpio_ret:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x9
   568   00005F                     	ds	1
   569   000060                     ??_seven_segment_write:
   570                           
   571                           ; 1 bytes @ 0xA
   572   000060                     	ds	2
   573   000062                     seven_segment_write@gpio_ret:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0xC
   577   000062                     	ds	1
   578   000063                     ??_InterruptManager:
   579   000063                     
   580                           ; 1 bytes @ 0xD
   581   000063                     	ds	8
   582                           
   583 ;;
   584 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   585 ;;
   586 ;; *************** function _main *****************
   587 ;; Defined at:
   588 ;;		line 14 in file "app.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  2  655[None  ] int 
   595 ;; Registers used:
   596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;Total ram usage:        0 bytes
   607 ;; Hardware stack levels required when called: 9
   608 ;; This function calls:
   609 ;;		_init
   610 ;; This function is called by:
   611 ;;		Startup code after reset
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text0
   616   001C3E                     __ptext0:
   617                           	callstack 0
   618   001C3E                     _main:
   619                           	callstack 22
   620   001C3E                     
   621                           ;app.c: 16:     init();
   622   001C3E  EC2B  F00D         	call	_init	;wreg free
   623   001C42                     l656:
   624   001C42  EF21  F00E         	goto	l656
   625   001C46  EF07  F000         	goto	start
   626   001C4A                     __end_of_main:
   627                           	callstack 0
   628                           
   629 ;; *************** function _init *****************
   630 ;; Defined at:
   631 ;;		line 52 in file "init.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  ret             1    0        unsigned char 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;Total ram usage:        0 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; Hardware stack levels required when called: 8
   652 ;; This function calls:
   653 ;;		_Timer0_Init
   654 ;;		_led_init
   655 ;;		_seven_segment_init
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text1
   662   001A56                     __ptext1:
   663                           	callstack 0
   664   001A56                     _init:
   665                           	callstack 22
   666   001A56  0E2A               	movlw	low _led_red
   667   001A58  0100               	movlb	0	; () banked
   668   001A5A  6FA7               	movwf	led_init@led& (0+255),b
   669   001A5C  ECD7  F00C         	call	_led_init	;wreg free
   670   001A60  0E26               	movlw	low _led_yellow
   671   001A62  0100               	movlb	0	; () banked
   672   001A64  6FA7               	movwf	led_init@led& (0+255),b
   673   001A66  ECD7  F00C         	call	_led_init	;wreg free
   674   001A6A  0E28               	movlw	low _led_green
   675   001A6C  0100               	movlb	0	; () banked
   676   001A6E  6FA7               	movwf	led_init@led& (0+255),b
   677   001A70  ECD7  F00C         	call	_led_init	;wreg free
   678   001A74  0E94               	movlw	low _timer0
   679   001A76  0100               	movlb	0	; () banked
   680   001A78  6F9D               	movwf	Timer0_Init@_timer& (0+255),b
   681   001A7A  EC89  F00B         	call	_Timer0_Init	;wreg free
   682   001A7E  0E21               	movlw	low _seg_red1
   683   001A80  0100               	movlb	0	; () banked
   684   001A82  6FA7               	movwf	seven_segment_init@seg& (0+255),b
   685   001A84  EC54  F00D         	call	_seven_segment_init	;wreg free
   686   001A88  0E1C               	movlw	low _seg_red2
   687   001A8A  0100               	movlb	0	; () banked
   688   001A8C  6FA7               	movwf	seven_segment_init@seg& (0+255),b
   689   001A8E  EC54  F00D         	call	_seven_segment_init	;wreg free
   690   001A92  0E17               	movlw	low _seg_green1
   691   001A94  0100               	movlb	0	; () banked
   692   001A96  6FA7               	movwf	seven_segment_init@seg& (0+255),b
   693   001A98  EC54  F00D         	call	_seven_segment_init	;wreg free
   694   001A9C  0E12               	movlw	low _seg_green2
   695   001A9E  0100               	movlb	0	; () banked
   696   001AA0  6FA7               	movwf	seven_segment_init@seg& (0+255),b
   697   001AA2  EC54  F00D         	call	_seven_segment_init	;wreg free
   698   001AA6  0012               	return		;funcret
   699   001AA8                     __end_of_init:
   700                           	callstack 0
   701                           
   702 ;; *************** function _seven_segment_init *****************
   703 ;; Defined at:
   704 ;;		line 16 in file "ECUAL/7_SEGMENT/seven_segment.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  seg             1   12[BANK0 ] PTR struct .
   707 ;;		 -> seg_green2(5), seg_green1(5), seg_red2(5), seg_red1(5), 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  ret             1   14[BANK0 ] unsigned char 
   710 ;;  gpio_ret        1   13[BANK0 ] unsigned char 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      unsigned char 
   713 ;; Registers used:
   714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   720 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   721 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;Total ram usage:        3 bytes
   725 ;; Hardware stack levels used: 1
   726 ;; Hardware stack levels required when called: 7
   727 ;; This function calls:
   728 ;;		_gpio_pin_output_low_init
   729 ;; This function is called by:
   730 ;;		_init
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text2
   735   001AA8                     __ptext2:
   736                           	callstack 0
   737   001AA8                     _seven_segment_init:
   738                           	callstack 22
   739   001AA8                     
   740                           ;ECUAL/7_SEGMENT/seven_segment.c: 20:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
   741   001AA8  0E00               	movlw	0
   742   001AAA  0100               	movlb	0	; () banked
   743   001AAC  6FA8               	movwf	seven_segment_init@gpio_ret& (0+255),b
   744                           
   745                           ;ECUAL/7_SEGMENT/seven_segment.c: 21:     if(((void*)0)==seg){
   746   001AAE  51A7               	movf	seven_segment_init@seg& (0+255),w,b
   747   001AB0  A4D8               	btfss	status,2,c
   748   001AB2  EF5D  F00D         	goto	u2981
   749   001AB6  EF5F  F00D         	goto	u2980
   750   001ABA                     u2981:
   751   001ABA  EF63  F00D         	goto	l3674
   752   001ABE                     u2980:
   753   001ABE                     
   754                           ; BSR set to: 0
   755                           ;ECUAL/7_SEGMENT/seven_segment.c: 22:         ret=(Std_ReturnType)0x00;
   756   001ABE  0E00               	movlw	0
   757   001AC0  6FA9               	movwf	seven_segment_init@ret& (0+255),b
   758                           
   759                           ;ECUAL/7_SEGMENT/seven_segment.c: 23:     }
   760   001AC2  EF77  F00D         	goto	l10
   761   001AC6                     l3674:
   762                           
   763                           ; BSR set to: 0
   764                           ;ECUAL/7_SEGMENT/seven_segment.c: 25:         for(counter=0;counter<8;counter++){
   765   001AC6  0E00               	movlw	0
   766   001AC8  6E53               	movwf	seven_segment_init@counter^0,c
   767   001ACA                     l3680:
   768   001ACA  0100               	movlb	0	; () banked
   769   001ACC  51A7               	movf	seven_segment_init@seg& (0+255),w,b
   770   001ACE  2453               	addwf	seven_segment_init@counter^0,w,c
   771   001AD0  6FA3               	movwf	gpio_pin_output_low_init@pin& (0+255),b
   772   001AD2  EC46  F00C         	call	_gpio_pin_output_low_init	;wreg free
   773   001AD6                     
   774                           ;ECUAL/7_SEGMENT/seven_segment.c: 27:         }
   775   001AD6  2A53               	incf	seven_segment_init@counter^0,f,c
   776   001AD8  0E07               	movlw	7
   777   001ADA  6453               	cpfsgt	seven_segment_init@counter^0,c
   778   001ADC  EF72  F00D         	goto	u2991
   779   001AE0  EF74  F00D         	goto	u2990
   780   001AE4                     u2991:
   781   001AE4  EF65  F00D         	goto	l3680
   782   001AE8                     u2990:
   783   001AE8                     
   784                           ;ECUAL/7_SEGMENT/seven_segment.c: 30:         ret=(Std_ReturnType)0x01;
   785   001AE8  0E01               	movlw	1
   786   001AEA  0100               	movlb	0	; () banked
   787   001AEC  6FA9               	movwf	seven_segment_init@ret& (0+255),b
   788   001AEE                     l10:
   789                           
   790                           ; BSR set to: 0
   791                           ;ECUAL/7_SEGMENT/seven_segment.c: 33:     return ret;
   792   001AEE  51A9               	movf	seven_segment_init@ret& (0+255),w,b
   793   001AF0                     
   794                           ; BSR set to: 0
   795   001AF0  0012               	return		;funcret
   796   001AF2                     __end_of_seven_segment_init:
   797                           	callstack 0
   798                           
   799 ;; *************** function _led_init *****************
   800 ;; Defined at:
   801 ;;		line 17 in file "ECUAL/LED/led.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  led             1   12[BANK0 ] PTR struct .
   804 ;;		 -> led_yellow(2), led_green(2), led_red(2), 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  ret             1   14[BANK0 ] unsigned char 
   807 ;;  gpio_ret        1   13[BANK0 ] unsigned char 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      unsigned char 
   810 ;; Registers used:
   811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   817 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;Total ram usage:        3 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; Hardware stack levels required when called: 7
   824 ;; This function calls:
   825 ;;		_gpio_pin_output_low_init
   826 ;; This function is called by:
   827 ;;		_init
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text3
   832   0019AE                     __ptext3:
   833                           	callstack 0
   834   0019AE                     _led_init:
   835                           	callstack 22
   836   0019AE                     
   837                           ;ECUAL/LED/led.c: 20:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
   838   0019AE  0E00               	movlw	0
   839   0019B0  0100               	movlb	0	; () banked
   840   0019B2  6FA8               	movwf	led_init@gpio_ret& (0+255),b
   841                           
   842                           ;ECUAL/LED/led.c: 21:     if(((void*)0)==led){
   843   0019B4  51A7               	movf	led_init@led& (0+255),w,b
   844   0019B6  A4D8               	btfss	status,2,c
   845   0019B8  EFE0  F00C         	goto	u3051
   846   0019BC  EFE2  F00C         	goto	u3050
   847   0019C0                     u3051:
   848   0019C0  EFE6  F00C         	goto	l3736
   849   0019C4                     u3050:
   850   0019C4                     
   851                           ; BSR set to: 0
   852                           ;ECUAL/LED/led.c: 22:         ret=(Std_ReturnType)0x00;
   853   0019C4  0E00               	movlw	0
   854   0019C6  6FA9               	movwf	led_init@ret& (0+255),b
   855                           
   856                           ;ECUAL/LED/led.c: 23:     }
   857   0019C8  EFFF  F00C         	goto	l3742
   858   0019CC                     l3736:
   859                           
   860                           ; BSR set to: 0
   861   0019CC  C0A7  F0A3         	movff	led_init@led,gpio_pin_output_low_init@pin
   862   0019D0  EC46  F00C         	call	_gpio_pin_output_low_init	;wreg free
   863   0019D4                     
   864                           ;ECUAL/LED/led.c: 26:         led->led_state=led->led_pin.logic;
   865   0019D4  0100               	movlb	0	; () banked
   866   0019D6  51A7               	movf	led_init@led& (0+255),w,b
   867   0019D8  6ED9               	movwf	fsr2l,c
   868   0019DA  6ADA               	clrf	fsr2h,c
   869   0019DC  0E01               	movlw	1
   870   0019DE  26D9               	addwf	fsr2l,f,c
   871   0019E0  51A7               	movf	led_init@led& (0+255),w,b
   872   0019E2  6EE1               	movwf	fsr1l,c
   873   0019E4  6AE2               	clrf	fsr1h,c
   874   0019E6  BEE7               	btfsc	indf1,7,c
   875   0019E8  EFF8  F00C         	goto	u3061
   876   0019EC  EFFB  F00C         	goto	u3060
   877   0019F0                     u3061:
   878   0019F0  0E01               	movlw	1
   879   0019F2  EFFC  F00C         	goto	u3066
   880   0019F6                     u3060:
   881   0019F6  0E00               	movlw	0
   882   0019F8                     u3066:
   883   0019F8  6EDF               	movwf	indf2,c
   884   0019FA                     
   885                           ; BSR set to: 0
   886                           ;ECUAL/LED/led.c: 27:         ret=(Std_ReturnType)0x01;
   887   0019FA  0E01               	movlw	1
   888   0019FC  6FA9               	movwf	led_init@ret& (0+255),b
   889   0019FE                     l3742:
   890                           
   891                           ; BSR set to: 0
   892                           ;ECUAL/LED/led.c: 30:     return ret;
   893   0019FE  51A9               	movf	led_init@ret& (0+255),w,b
   894   001A00                     
   895                           ; BSR set to: 0
   896   001A00  0012               	return		;funcret
   897   001A02                     __end_of_led_init:
   898                           	callstack 0
   899                           
   900 ;; *************** function _gpio_pin_output_low_init *****************
   901 ;; Defined at:
   902 ;;		line 161 in file "MCAL/GPIO/gpio.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  pin             1    8[BANK0 ] PTR struct .
   905 ;;		 -> seg_green2$seven_segment_pins(4), seg_green1$seven_segment_pins(4), seg_red2$seven_segment_pins(4), seg_red1$sev
      +en_segment_pins(4), 
   906 ;;		 -> seg_green2(5), seg_green1(5), led_yellow(2), seg_red2(5), 
   907 ;;		 -> seg_red1(5), led_green(2), led_red(2), 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  ret             1   11[BANK0 ] unsigned char 
   910 ;;  gpio_ret        1   10[BANK0 ] unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      unsigned char 
   913 ;; Registers used:
   914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   920 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;Total ram usage:        4 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 6
   927 ;; This function calls:
   928 ;;		_gpio_pin_direction_init
   929 ;;		_gpio_pin_logic_write
   930 ;; This function is called by:
   931 ;;		_seven_segment_init
   932 ;;		_led_init
   933 ;;		_lcd_init
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text4
   938   00188C                     __ptext4:
   939                           	callstack 0
   940   00188C                     _gpio_pin_output_low_init:
   941                           	callstack 22
   942   00188C                     
   943                           ;MCAL/GPIO/gpio.c: 164:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
   944   00188C  0E00               	movlw	0
   945   00188E  0100               	movlb	0	; () banked
   946   001890  6FA5               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
   947                           
   948                           ;MCAL/GPIO/gpio.c: 165:     if(((void*)0)==pin || (pin->pin)>7){
   949   001892  51A3               	movf	gpio_pin_output_low_init@pin& (0+255),w,b
   950   001894  B4D8               	btfsc	status,2,c
   951   001896  EF4F  F00C         	goto	u2791
   952   00189A  EF51  F00C         	goto	u2790
   953   00189E                     u2791:
   954   00189E  EF61  F00C         	goto	l3566
   955   0018A2                     u2790:
   956   0018A2                     
   957                           ; BSR set to: 0
   958   0018A2  51A3               	movf	gpio_pin_output_low_init@pin& (0+255),w,b
   959   0018A4  6ED9               	movwf	fsr2l,c
   960   0018A6  6ADA               	clrf	fsr2h,c
   961   0018A8  30DF               	rrcf	223,w,c
   962   0018AA  32E8               	rrcf	wreg,f,c
   963   0018AC  32E8               	rrcf	wreg,f,c
   964   0018AE  0B07               	andlw	7
   965   0018B0  6FA4               	movwf	??_gpio_pin_output_low_init& (0+255),b
   966   0018B2  0E07               	movlw	7
   967   0018B4  65A4               	cpfsgt	??_gpio_pin_output_low_init& (0+255),b
   968   0018B6  EF5F  F00C         	goto	u2801
   969   0018BA  EF61  F00C         	goto	u2800
   970   0018BE                     u2801:
   971   0018BE  EF65  F00C         	goto	l3568
   972   0018C2                     u2800:
   973   0018C2                     l3566:
   974                           
   975                           ; BSR set to: 0
   976                           ;MCAL/GPIO/gpio.c: 166:         ret=(Std_ReturnType)0x00;
   977   0018C2  0E00               	movlw	0
   978   0018C4  6FA6               	movwf	gpio_pin_output_low_init@ret& (0+255),b
   979                           
   980                           ;MCAL/GPIO/gpio.c: 167:     }
   981   0018C6  EF77  F00C         	goto	l3572
   982   0018CA                     l3568:
   983                           
   984                           ; BSR set to: 0
   985                           ;MCAL/GPIO/gpio.c: 169:         gpio_ret=gpio_pin_direction_init(pin,OUTPUT);
   986   0018CA  C0A3  F09B         	movff	gpio_pin_output_low_init@pin,gpio_pin_direction_init@pin
   987   0018CE  0E00               	movlw	0
   988   0018D0  6F9C               	movwf	gpio_pin_direction_init@pin_direction& (0+255),b
   989   0018D2  EC97  F009         	call	_gpio_pin_direction_init	;wreg free
   990   0018D6  0100               	movlb	0	; () banked
   991   0018D8  6FA5               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
   992                           
   993                           ;MCAL/GPIO/gpio.c: 170:         gpio_ret=gpio_pin_logic_write(pin,LOW);
   994   0018DA  C0A3  F09B         	movff	gpio_pin_output_low_init@pin,gpio_pin_logic_write@pin
   995   0018DE  0E00               	movlw	0
   996   0018E0  6F9C               	movwf	gpio_pin_logic_write@pin_logic& (0+255),b
   997   0018E2  ECF9  F008         	call	_gpio_pin_logic_write	;wreg free
   998   0018E6  0100               	movlb	0	; () banked
   999   0018E8  6FA5               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
  1000   0018EA                     
  1001                           ; BSR set to: 0
  1002                           ;MCAL/GPIO/gpio.c: 171:         ret=(Std_ReturnType)0x01;
  1003   0018EA  0E01               	movlw	1
  1004   0018EC  6FA6               	movwf	gpio_pin_output_low_init@ret& (0+255),b
  1005   0018EE                     l3572:
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;MCAL/GPIO/gpio.c: 174:     return ret;
  1009   0018EE  51A6               	movf	gpio_pin_output_low_init@ret& (0+255),w,b
  1010   0018F0                     
  1011                           ; BSR set to: 0
  1012   0018F0  0012               	return		;funcret
  1013   0018F2                     __end_of_gpio_pin_output_low_init:
  1014                           	callstack 0
  1015                           
  1016 ;; *************** function _gpio_pin_logic_write *****************
  1017 ;; Defined at:
  1018 ;;		line 81 in file "MCAL/GPIO/gpio.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  pin             1    0[BANK0 ] PTR struct .
  1021 ;;		 -> seg_green2$seven_segment_pins(4), seg_green1$seven_segment_pins(4), seg_red2$seven_segment_pins(4), seg_red1$sev
      +en_segment_pins(4), 
  1022 ;;		 -> seg_green2(5), seg_green1(5), led_yellow(2), seg_red2(5), 
  1023 ;;		 -> seg_red1(5), led_green(2), led_red(2), 
  1024 ;;  pin_logic       1    1[BANK0 ] enum E2978
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  ret             1    7[BANK0 ] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      unsigned char 
  1029 ;; Registers used:
  1030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1036 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;Total ram usage:        8 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; Hardware stack levels required when called: 5
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_gpio_pin_output_low_init
  1047 ;;		_lcd_send_command
  1048 ;;		_lcd_send_char_data
  1049 ;;		_lcd_send_nbits
  1050 ;;		_lcd_send_enable
  1051 ;;		_gpio_pin_output_high_init
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text5
  1056   0011F2                     __ptext5:
  1057                           	callstack 0
  1058   0011F2                     _gpio_pin_logic_write:
  1059                           	callstack 22
  1060   0011F2                     
  1061                           ;MCAL/GPIO/gpio.c: 84:     if(((void*)0)==pin ||(pin->pin)>7 || pin_logic>1){
  1062   0011F2  0100               	movlb	0	; () banked
  1063   0011F4  519B               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  1064   0011F6  B4D8               	btfsc	status,2,c
  1065   0011F8  EF00  F009         	goto	u2611
  1066   0011FC  EF02  F009         	goto	u2610
  1067   001200                     u2611:
  1068   001200  EF1A  F009         	goto	l3480
  1069   001204                     u2610:
  1070   001204                     
  1071                           ; BSR set to: 0
  1072   001204  519B               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  1073   001206  6ED9               	movwf	fsr2l,c
  1074   001208  6ADA               	clrf	fsr2h,c
  1075   00120A  30DF               	rrcf	223,w,c
  1076   00120C  32E8               	rrcf	wreg,f,c
  1077   00120E  32E8               	rrcf	wreg,f,c
  1078   001210  0B07               	andlw	7
  1079   001212  6F9D               	movwf	??_gpio_pin_logic_write& (0+255),b
  1080   001214  0E08               	movlw	8
  1081   001216  619D               	cpfslt	??_gpio_pin_logic_write& (0+255),b
  1082   001218  EF10  F009         	goto	u2621
  1083   00121C  EF12  F009         	goto	u2620
  1084   001220                     u2621:
  1085   001220  EF1A  F009         	goto	l3480
  1086   001224                     u2620:
  1087   001224                     
  1088                           ; BSR set to: 0
  1089   001224  0E01               	movlw	1
  1090   001226  659C               	cpfsgt	gpio_pin_logic_write@pin_logic& (0+255),b
  1091   001228  EF18  F009         	goto	u2631
  1092   00122C  EF1A  F009         	goto	u2630
  1093   001230                     u2631:
  1094   001230  EF75  F009         	goto	l3488
  1095   001234                     u2630:
  1096   001234                     l3480:
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;MCAL/GPIO/gpio.c: 85:         ret=(Std_ReturnType)0x00;
  1100   001234  0E00               	movlw	0
  1101   001236  6FA2               	movwf	gpio_pin_logic_write@ret& (0+255),b
  1102                           
  1103                           ;MCAL/GPIO/gpio.c: 86:     }
  1104   001238  EF95  F009         	goto	l3494
  1105   00123C                     l3482:
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;MCAL/GPIO/gpio.c: 90:                 (*latx[pin->port] &= ~((uint8)1<<pin->pin));
  1109   00123C  519B               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  1110   00123E  6ED9               	movwf	fsr2l,c
  1111   001240  6ADA               	clrf	fsr2h,c
  1112   001242  30DF               	rrcf	223,w,c
  1113   001244  32E8               	rrcf	wreg,f,c
  1114   001246  32E8               	rrcf	wreg,f,c
  1115   001248  0B07               	andlw	7
  1116   00124A  6F9D               	movwf	??_gpio_pin_logic_write& (0+255),b
  1117   00124C  0E01               	movlw	1
  1118   00124E  6F9E               	movwf	(??_gpio_pin_logic_write+1)& (0+255),b
  1119   001250  2B9D               	incf	??_gpio_pin_logic_write& (0+255),f,b
  1120   001252  EF2D  F009         	goto	u2644
  1121   001256                     u2645:
  1122   001256  90D8               	bcf	status,0,c
  1123   001258  379E               	rlcf	(??_gpio_pin_logic_write+1)& (0+255),f,b
  1124   00125A                     u2644:
  1125   00125A  2F9D               	decfsz	??_gpio_pin_logic_write& (0+255),f,b
  1126   00125C  EF2B  F009         	goto	u2645
  1127   001260  0100               	movlb	0	; () banked
  1128   001262  519E               	movf	(??_gpio_pin_logic_write+1)& (0+255),w,b
  1129   001264  0AFF               	xorlw	255
  1130   001266  6F9F               	movwf	(??_gpio_pin_logic_write+2)& (0+255),b
  1131   001268  519B               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  1132   00126A  6ED9               	movwf	fsr2l,c
  1133   00126C  6ADA               	clrf	fsr2h,c
  1134   00126E  50DF               	movf	223,w,c
  1135   001270  0B07               	andlw	7
  1136   001272  0D02               	mullw	2
  1137   001274  50F3               	movf	243,w,c
  1138   001276  0F01               	addlw	low _latx
  1139   001278  6ED9               	movwf	fsr2l,c
  1140   00127A  6ADA               	clrf	fsr2h,c
  1141   00127C  CFDE F0A0          	movff	postinc2,??_gpio_pin_logic_write+3
  1142   001280  CFDD F0A1          	movff	postdec2,??_gpio_pin_logic_write+4
  1143   001284  C0A0  FFD9         	movff	??_gpio_pin_logic_write+3,fsr2l
  1144   001288  C0A1  FFDA         	movff	??_gpio_pin_logic_write+4,fsr2h
  1145   00128C  519F               	movf	(??_gpio_pin_logic_write+2)& (0+255),w,b
  1146   00128E  16DF               	andwf	indf2,f,c
  1147                           
  1148                           ;MCAL/GPIO/gpio.c: 91:                 break;
  1149   001290  EF8A  F009         	goto	l3490
  1150   001294                     l3484:
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;MCAL/GPIO/gpio.c: 94:                 (*latx[pin->port] |= ((uint8)1<<pin->pin));
  1154   001294  519B               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  1155   001296  6ED9               	movwf	fsr2l,c
  1156   001298  6ADA               	clrf	fsr2h,c
  1157   00129A  30DF               	rrcf	223,w,c
  1158   00129C  32E8               	rrcf	wreg,f,c
  1159   00129E  32E8               	rrcf	wreg,f,c
  1160   0012A0  0B07               	andlw	7
  1161   0012A2  6F9D               	movwf	??_gpio_pin_logic_write& (0+255),b
  1162   0012A4  0E01               	movlw	1
  1163   0012A6  6F9E               	movwf	(??_gpio_pin_logic_write+1)& (0+255),b
  1164   0012A8  2B9D               	incf	??_gpio_pin_logic_write& (0+255),f,b
  1165   0012AA  EF59  F009         	goto	u2654
  1166   0012AE                     u2655:
  1167   0012AE  90D8               	bcf	status,0,c
  1168   0012B0  379E               	rlcf	(??_gpio_pin_logic_write+1)& (0+255),f,b
  1169   0012B2                     u2654:
  1170   0012B2  2F9D               	decfsz	??_gpio_pin_logic_write& (0+255),f,b
  1171   0012B4  EF57  F009         	goto	u2655
  1172   0012B8  0100               	movlb	0	; () banked
  1173   0012BA  519B               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  1174   0012BC  6ED9               	movwf	fsr2l,c
  1175   0012BE  6ADA               	clrf	fsr2h,c
  1176   0012C0  50DF               	movf	223,w,c
  1177   0012C2  0B07               	andlw	7
  1178   0012C4  0D02               	mullw	2
  1179   0012C6  50F3               	movf	243,w,c
  1180   0012C8  0F01               	addlw	low _latx
  1181   0012CA  6ED9               	movwf	fsr2l,c
  1182   0012CC  6ADA               	clrf	fsr2h,c
  1183   0012CE  CFDE F09F          	movff	postinc2,??_gpio_pin_logic_write+2
  1184   0012D2  CFDD F0A0          	movff	postdec2,??_gpio_pin_logic_write+3
  1185   0012D6  C09F  FFD9         	movff	??_gpio_pin_logic_write+2,fsr2l
  1186   0012DA  C0A0  FFDA         	movff	??_gpio_pin_logic_write+3,fsr2h
  1187   0012DE  519E               	movf	(??_gpio_pin_logic_write+1)& (0+255),w,b
  1188   0012E0  12DF               	iorwf	indf2,f,c
  1189                           
  1190                           ;MCAL/GPIO/gpio.c: 95:                 break;
  1191   0012E2  EF8A  F009         	goto	l3490
  1192   0012E6                     l3486:
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;MCAL/GPIO/gpio.c: 99:         }
  1196   0012E6  EF8A  F009         	goto	l3490
  1197   0012EA                     l3488:
  1198                           
  1199                           ; BSR set to: 0
  1200   0012EA  519C               	movf	gpio_pin_logic_write@pin_logic& (0+255),w,b
  1201   0012EC  6F9D               	movwf	??_gpio_pin_logic_write& (0+255),b
  1202   0012EE  6B9E               	clrf	(??_gpio_pin_logic_write+1)& (0+255),b
  1203                           
  1204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1205                           ; Switch size 1, requested type "simple"
  1206                           ; Number of cases is 1, Range of values is 0 to 0
  1207                           ; switch strategies available:
  1208                           ; Name         Instructions Cycles
  1209                           ; simple_byte            4     3 (average)
  1210                           ;	Chosen strategy is simple_byte
  1211   0012F0  519E               	movf	(??_gpio_pin_logic_write+1)& (0+255),w,b
  1212   0012F2  0A00               	xorlw	0	; case 0
  1213   0012F4  B4D8               	btfsc	status,2,c
  1214   0012F6  EF7F  F009         	goto	l4208
  1215   0012FA  EF73  F009         	goto	l3486
  1216   0012FE                     l4208:
  1217                           
  1218                           ; BSR set to: 0
  1219                           ; Switch size 1, requested type "simple"
  1220                           ; Number of cases is 2, Range of values is 0 to 1
  1221                           ; switch strategies available:
  1222                           ; Name         Instructions Cycles
  1223                           ; simple_byte            7     4 (average)
  1224                           ;	Chosen strategy is simple_byte
  1225   0012FE  519D               	movf	??_gpio_pin_logic_write& (0+255),w,b
  1226   001300  0A00               	xorlw	0	; case 0
  1227   001302  B4D8               	btfsc	status,2,c
  1228   001304  EF1E  F009         	goto	l3482
  1229   001308  0A01               	xorlw	1	; case 1
  1230   00130A  B4D8               	btfsc	status,2,c
  1231   00130C  EF4A  F009         	goto	l3484
  1232   001310  EF73  F009         	goto	l3486
  1233   001314                     l3490:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;MCAL/GPIO/gpio.c: 100:         pin->logic=pin_logic;
  1237   001314  519B               	movf	gpio_pin_logic_write@pin& (0+255),w,b
  1238   001316  6ED9               	movwf	fsr2l,c
  1239   001318  6ADA               	clrf	fsr2h,c
  1240   00131A  B19C               	btfsc	gpio_pin_logic_write@pin_logic& (0+255),0,b
  1241   00131C  D002               	bra	u2665
  1242   00131E  9EDF               	bcf	indf2,7,c
  1243   001320  D002               	bra	u2666
  1244   001322                     u2665:
  1245   001322  0100               	movlb	0	; () banked
  1246   001324  8EDF               	bsf	indf2,7,c
  1247   001326                     u2666:
  1248   001326                     
  1249                           ; BSR set to: 0
  1250                           ;MCAL/GPIO/gpio.c: 101:         ret=(Std_ReturnType)0x01;
  1251   001326  0E01               	movlw	1
  1252   001328  6FA2               	movwf	gpio_pin_logic_write@ret& (0+255),b
  1253   00132A                     l3494:
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;MCAL/GPIO/gpio.c: 104:     return ret;
  1257   00132A  51A2               	movf	gpio_pin_logic_write@ret& (0+255),w,b
  1258   00132C                     
  1259                           ; BSR set to: 0
  1260   00132C  0012               	return		;funcret
  1261   00132E                     __end_of_gpio_pin_logic_write:
  1262                           	callstack 0
  1263                           
  1264 ;; *************** function _gpio_pin_direction_init *****************
  1265 ;; Defined at:
  1266 ;;		line 23 in file "MCAL/GPIO/gpio.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  pin             1    0[BANK0 ] PTR struct .
  1269 ;;		 -> seg_green2$seven_segment_pins(4), seg_green1$seven_segment_pins(4), seg_red2$seven_segment_pins(4), seg_red1$sev
      +en_segment_pins(4), 
  1270 ;;		 -> seg_green2(5), seg_green1(5), led_yellow(2), seg_red2(5), 
  1271 ;;		 -> seg_red1(5), led_green(2), led_red(2), 
  1272 ;;  pin_directio    1    1[BANK0 ] enum E2982
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  ret             1    7[BANK0 ] unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      unsigned char 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1284 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1288 ;;Total ram usage:        8 bytes
  1289 ;; Hardware stack levels used: 1
  1290 ;; Hardware stack levels required when called: 5
  1291 ;; This function calls:
  1292 ;;		Nothing
  1293 ;; This function is called by:
  1294 ;;		_gpio_pin_output_low_init
  1295 ;;		_gpio_pin_output_high_init
  1296 ;;		_gpio_pin_input_init
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text6
  1301   00132E                     __ptext6:
  1302                           	callstack 0
  1303   00132E                     _gpio_pin_direction_init:
  1304                           	callstack 22
  1305   00132E                     
  1306                           ;MCAL/GPIO/gpio.c: 26:     if(((void*)0)==pin || (pin->pin)>7 || pin_direction>1){
  1307   00132E  0100               	movlb	0	; () banked
  1308   001330  519B               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  1309   001332  B4D8               	btfsc	status,2,c
  1310   001334  EF9E  F009         	goto	u2671
  1311   001338  EFA0  F009         	goto	u2670
  1312   00133C                     u2671:
  1313   00133C  EFB8  F009         	goto	l3510
  1314   001340                     u2670:
  1315   001340                     
  1316                           ; BSR set to: 0
  1317   001340  519B               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  1318   001342  6ED9               	movwf	fsr2l,c
  1319   001344  6ADA               	clrf	fsr2h,c
  1320   001346  30DF               	rrcf	223,w,c
  1321   001348  32E8               	rrcf	wreg,f,c
  1322   00134A  32E8               	rrcf	wreg,f,c
  1323   00134C  0B07               	andlw	7
  1324   00134E  6F9D               	movwf	??_gpio_pin_direction_init& (0+255),b
  1325   001350  0E08               	movlw	8
  1326   001352  619D               	cpfslt	??_gpio_pin_direction_init& (0+255),b
  1327   001354  EFAE  F009         	goto	u2681
  1328   001358  EFB0  F009         	goto	u2680
  1329   00135C                     u2681:
  1330   00135C  EFB8  F009         	goto	l3510
  1331   001360                     u2680:
  1332   001360                     
  1333                           ; BSR set to: 0
  1334   001360  0E01               	movlw	1
  1335   001362  659C               	cpfsgt	gpio_pin_direction_init@pin_direction& (0+255),b
  1336   001364  EFB6  F009         	goto	u2691
  1337   001368  EFB8  F009         	goto	u2690
  1338   00136C                     u2691:
  1339   00136C  EF13  F00A         	goto	l3518
  1340   001370                     u2690:
  1341   001370                     l3510:
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;MCAL/GPIO/gpio.c: 27:         ret=(Std_ReturnType)0x00;
  1345   001370  0E00               	movlw	0
  1346   001372  6FA2               	movwf	gpio_pin_direction_init@ret& (0+255),b
  1347                           
  1348                           ;MCAL/GPIO/gpio.c: 28:     }
  1349   001374  EF33  F00A         	goto	l3524
  1350   001378                     l3512:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;MCAL/GPIO/gpio.c: 32:                 (*trisx[pin->port] &= ~((uint8)1<<pin->pin));
  1354   001378  519B               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  1355   00137A  6ED9               	movwf	fsr2l,c
  1356   00137C  6ADA               	clrf	fsr2h,c
  1357   00137E  30DF               	rrcf	223,w,c
  1358   001380  32E8               	rrcf	wreg,f,c
  1359   001382  32E8               	rrcf	wreg,f,c
  1360   001384  0B07               	andlw	7
  1361   001386  6F9D               	movwf	??_gpio_pin_direction_init& (0+255),b
  1362   001388  0E01               	movlw	1
  1363   00138A  6F9E               	movwf	(??_gpio_pin_direction_init+1)& (0+255),b
  1364   00138C  2B9D               	incf	??_gpio_pin_direction_init& (0+255),f,b
  1365   00138E  EFCB  F009         	goto	u2704
  1366   001392                     u2705:
  1367   001392  90D8               	bcf	status,0,c
  1368   001394  379E               	rlcf	(??_gpio_pin_direction_init+1)& (0+255),f,b
  1369   001396                     u2704:
  1370   001396  2F9D               	decfsz	??_gpio_pin_direction_init& (0+255),f,b
  1371   001398  EFC9  F009         	goto	u2705
  1372   00139C  0100               	movlb	0	; () banked
  1373   00139E  519E               	movf	(??_gpio_pin_direction_init+1)& (0+255),w,b
  1374   0013A0  0AFF               	xorlw	255
  1375   0013A2  6F9F               	movwf	(??_gpio_pin_direction_init+2)& (0+255),b
  1376   0013A4  519B               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  1377   0013A6  6ED9               	movwf	fsr2l,c
  1378   0013A8  6ADA               	clrf	fsr2h,c
  1379   0013AA  50DF               	movf	223,w,c
  1380   0013AC  0B07               	andlw	7
  1381   0013AE  0D02               	mullw	2
  1382   0013B0  50F3               	movf	243,w,c
  1383   0013B2  0F8A               	addlw	low _trisx
  1384   0013B4  6ED9               	movwf	fsr2l,c
  1385   0013B6  6ADA               	clrf	fsr2h,c
  1386   0013B8  CFDE F0A0          	movff	postinc2,??_gpio_pin_direction_init+3
  1387   0013BC  CFDD F0A1          	movff	postdec2,??_gpio_pin_direction_init+4
  1388   0013C0  C0A0  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1389   0013C4  C0A1  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1390   0013C8  519F               	movf	(??_gpio_pin_direction_init+2)& (0+255),w,b
  1391   0013CA  16DF               	andwf	indf2,f,c
  1392                           
  1393                           ;MCAL/GPIO/gpio.c: 33:                 break;
  1394   0013CC  EF28  F00A         	goto	l3520
  1395   0013D0                     l3514:
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;MCAL/GPIO/gpio.c: 36:                 (*trisx[pin->port] |= ((uint8)1<<pin->pin));
  1399   0013D0  519B               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  1400   0013D2  6ED9               	movwf	fsr2l,c
  1401   0013D4  6ADA               	clrf	fsr2h,c
  1402   0013D6  30DF               	rrcf	223,w,c
  1403   0013D8  32E8               	rrcf	wreg,f,c
  1404   0013DA  32E8               	rrcf	wreg,f,c
  1405   0013DC  0B07               	andlw	7
  1406   0013DE  6F9D               	movwf	??_gpio_pin_direction_init& (0+255),b
  1407   0013E0  0E01               	movlw	1
  1408   0013E2  6F9E               	movwf	(??_gpio_pin_direction_init+1)& (0+255),b
  1409   0013E4  2B9D               	incf	??_gpio_pin_direction_init& (0+255),f,b
  1410   0013E6  EFF7  F009         	goto	u2714
  1411   0013EA                     u2715:
  1412   0013EA  90D8               	bcf	status,0,c
  1413   0013EC  379E               	rlcf	(??_gpio_pin_direction_init+1)& (0+255),f,b
  1414   0013EE                     u2714:
  1415   0013EE  2F9D               	decfsz	??_gpio_pin_direction_init& (0+255),f,b
  1416   0013F0  EFF5  F009         	goto	u2715
  1417   0013F4  0100               	movlb	0	; () banked
  1418   0013F6  519B               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  1419   0013F8  6ED9               	movwf	fsr2l,c
  1420   0013FA  6ADA               	clrf	fsr2h,c
  1421   0013FC  50DF               	movf	223,w,c
  1422   0013FE  0B07               	andlw	7
  1423   001400  0D02               	mullw	2
  1424   001402  50F3               	movf	243,w,c
  1425   001404  0F8A               	addlw	low _trisx
  1426   001406  6ED9               	movwf	fsr2l,c
  1427   001408  6ADA               	clrf	fsr2h,c
  1428   00140A  CFDE F09F          	movff	postinc2,??_gpio_pin_direction_init+2
  1429   00140E  CFDD F0A0          	movff	postdec2,??_gpio_pin_direction_init+3
  1430   001412  C09F  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  1431   001416  C0A0  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  1432   00141A  519E               	movf	(??_gpio_pin_direction_init+1)& (0+255),w,b
  1433   00141C  12DF               	iorwf	indf2,f,c
  1434                           
  1435                           ;MCAL/GPIO/gpio.c: 37:                 break;
  1436   00141E  EF28  F00A         	goto	l3520
  1437   001422                     l3516:
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;MCAL/GPIO/gpio.c: 41:         }
  1441   001422  EF28  F00A         	goto	l3520
  1442   001426                     l3518:
  1443                           
  1444                           ; BSR set to: 0
  1445   001426  519C               	movf	gpio_pin_direction_init@pin_direction& (0+255),w,b
  1446   001428  6F9D               	movwf	??_gpio_pin_direction_init& (0+255),b
  1447   00142A  6B9E               	clrf	(??_gpio_pin_direction_init+1)& (0+255),b
  1448                           
  1449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1450                           ; Switch size 1, requested type "simple"
  1451                           ; Number of cases is 1, Range of values is 0 to 0
  1452                           ; switch strategies available:
  1453                           ; Name         Instructions Cycles
  1454                           ; simple_byte            4     3 (average)
  1455                           ;	Chosen strategy is simple_byte
  1456   00142C  519E               	movf	(??_gpio_pin_direction_init+1)& (0+255),w,b
  1457   00142E  0A00               	xorlw	0	; case 0
  1458   001430  B4D8               	btfsc	status,2,c
  1459   001432  EF1D  F00A         	goto	l4210
  1460   001436  EF11  F00A         	goto	l3516
  1461   00143A                     l4210:
  1462                           
  1463                           ; BSR set to: 0
  1464                           ; Switch size 1, requested type "simple"
  1465                           ; Number of cases is 2, Range of values is 0 to 1
  1466                           ; switch strategies available:
  1467                           ; Name         Instructions Cycles
  1468                           ; simple_byte            7     4 (average)
  1469                           ;	Chosen strategy is simple_byte
  1470   00143A  519D               	movf	??_gpio_pin_direction_init& (0+255),w,b
  1471   00143C  0A00               	xorlw	0	; case 0
  1472   00143E  B4D8               	btfsc	status,2,c
  1473   001440  EFBC  F009         	goto	l3512
  1474   001444  0A01               	xorlw	1	; case 1
  1475   001446  B4D8               	btfsc	status,2,c
  1476   001448  EFE8  F009         	goto	l3514
  1477   00144C  EF11  F00A         	goto	l3516
  1478   001450                     l3520:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;MCAL/GPIO/gpio.c: 42:         pin->direction=pin_direction;
  1482   001450  519B               	movf	gpio_pin_direction_init@pin& (0+255),w,b
  1483   001452  6ED9               	movwf	fsr2l,c
  1484   001454  6ADA               	clrf	fsr2h,c
  1485   001456  B19C               	btfsc	gpio_pin_direction_init@pin_direction& (0+255),0,b
  1486   001458  D002               	bra	u2725
  1487   00145A  9CDF               	bcf	indf2,6,c
  1488   00145C  D002               	bra	u2726
  1489   00145E                     u2725:
  1490   00145E  0100               	movlb	0	; () banked
  1491   001460  8CDF               	bsf	indf2,6,c
  1492   001462                     u2726:
  1493   001462                     
  1494                           ; BSR set to: 0
  1495                           ;MCAL/GPIO/gpio.c: 43:         ret=(Std_ReturnType)0x01;
  1496   001462  0E01               	movlw	1
  1497   001464  6FA2               	movwf	gpio_pin_direction_init@ret& (0+255),b
  1498   001466                     l3524:
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;MCAL/GPIO/gpio.c: 46:     return ret;
  1502   001466  51A2               	movf	gpio_pin_direction_init@ret& (0+255),w,b
  1503   001468                     
  1504                           ; BSR set to: 0
  1505   001468  0012               	return		;funcret
  1506   00146A                     __end_of_gpio_pin_direction_init:
  1507                           	callstack 0
  1508                           
  1509 ;; *************** function _Timer0_Init *****************
  1510 ;; Defined at:
  1511 ;;		line 33 in file "MCAL/TIMER0/timer0.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  _timer          1    2[BANK0 ] PTR const struct .
  1514 ;;		 -> timer0(7), 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  ret             1    5[BANK0 ] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      unsigned char 
  1519 ;; Registers used:
  1520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1526 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;Total ram usage:        4 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; Hardware stack levels required when called: 6
  1533 ;; This function calls:
  1534 ;;		_Timer0_Mode_Select
  1535 ;;		_Timer0_Prescaler_Config
  1536 ;;		_Timer0_Register_Size_Config
  1537 ;; This function is called by:
  1538 ;;		_init
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text7
  1543   001712                     __ptext7:
  1544                           	callstack 0
  1545   001712                     _Timer0_Init:
  1546                           	callstack 23
  1547   001712                     
  1548                           ;MCAL/TIMER0/timer0.c: 35:     if(((void*)0) == _timer){
  1549   001712  0100               	movlb	0	; () banked
  1550   001714  519D               	movf	Timer0_Init@_timer& (0+255),w,b
  1551   001716  A4D8               	btfss	status,2,c
  1552   001718  EF90  F00B         	goto	u3071
  1553   00171C  EF92  F00B         	goto	u3070
  1554   001720                     u3071:
  1555   001720  EF96  F00B         	goto	l579
  1556   001724                     u3070:
  1557   001724                     
  1558                           ; BSR set to: 0
  1559                           ;MCAL/TIMER0/timer0.c: 36:         ret = (Std_ReturnType)0x00;
  1560   001724  0E00               	movlw	0
  1561   001726  6FA0               	movwf	Timer0_Init@ret& (0+255),b
  1562                           
  1563                           ;MCAL/TIMER0/timer0.c: 37:     }
  1564   001728  EFD0  F00B         	goto	l3772
  1565   00172C                     l579:
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;MCAL/TIMER0/timer0.c: 40:         (T0CONbits.TMR0ON=0);
  1569   00172C  9ED5               	bcf	213,7,c	;volatile
  1570   00172E                     
  1571                           ; BSR set to: 0
  1572                           ;MCAL/TIMER0/timer0.c: 42:         Timer0_Prescaler_Config(_timer);
  1573   00172E  C09D  F09B         	movff	Timer0_Init@_timer,Timer0_Prescaler_Config@_timer
  1574   001732  EC01  F00D         	call	_Timer0_Prescaler_Config	;wreg free
  1575                           
  1576                           ;MCAL/TIMER0/timer0.c: 44:         Timer0_Mode_Select(_timer);
  1577   001736  C09D  F09B         	movff	Timer0_Init@_timer,Timer0_Mode_Select@_timer
  1578   00173A  ECD2  F00B         	call	_Timer0_Mode_Select	;wreg free
  1579                           
  1580                           ;MCAL/TIMER0/timer0.c: 46:         Timer0_Register_Size_Config(_timer);
  1581   00173E  C09D  F09B         	movff	Timer0_Init@_timer,Timer0_Register_Size_Config@_timer
  1582   001742  ECC3  F00D         	call	_Timer0_Register_Size_Config	;wreg free
  1583   001746                     
  1584                           ;MCAL/TIMER0/timer0.c: 48:         TMR0H = (_timer->timer0_preload_value) >> 8;
  1585   001746  0100               	movlb	0	; () banked
  1586   001748  519D               	movf	Timer0_Init@_timer& (0+255),w,b
  1587   00174A  6ED9               	movwf	fsr2l,c
  1588   00174C  6ADA               	clrf	fsr2h,c
  1589   00174E  0E04               	movlw	4
  1590   001750  26D9               	addwf	fsr2l,f,c
  1591   001752  CFDE F09E          	movff	postinc2,??_Timer0_Init
  1592   001756  CFDD F09F          	movff	postdec2,??_Timer0_Init+1
  1593   00175A  C09F  F09E         	movff	??_Timer0_Init+1,??_Timer0_Init
  1594   00175E  6B9F               	clrf	(??_Timer0_Init+1)& (0+255),b
  1595   001760  519E               	movf	??_Timer0_Init& (0+255),w,b
  1596   001762  6ED7               	movwf	215,c	;volatile
  1597   001764                     
  1598                           ; BSR set to: 0
  1599                           ;MCAL/TIMER0/timer0.c: 49:         TMR0L = (uint8)(_timer->timer0_preload_value);
  1600   001764  519D               	movf	Timer0_Init@_timer& (0+255),w,b
  1601   001766  6ED9               	movwf	fsr2l,c
  1602   001768  6ADA               	clrf	fsr2h,c
  1603   00176A  0E04               	movlw	4
  1604   00176C  26D9               	addwf	fsr2l,f,c
  1605   00176E  50DF               	movf	indf2,w,c
  1606   001770  6ED6               	movwf	214,c	;volatile
  1607   001772                     
  1608                           ; BSR set to: 0
  1609                           ;MCAL/TIMER0/timer0.c: 50:         timer0_preload = _timer->timer0_preload_value;
  1610   001772  519D               	movf	Timer0_Init@_timer& (0+255),w,b
  1611   001774  6ED9               	movwf	fsr2l,c
  1612   001776  6ADA               	clrf	fsr2h,c
  1613   001778  0E04               	movlw	4
  1614   00177A  26D9               	addwf	fsr2l,f,c
  1615   00177C  CFDE F032          	movff	postinc2,_timer0_preload
  1616   001780  CFDD F033          	movff	postdec2,_timer0_preload+1
  1617   001784                     
  1618                           ; BSR set to: 0
  1619                           ;MCAL/TIMER0/timer0.c: 53:         (INTCONbits.TMR0IF = 0);
  1620   001784  94F2               	bcf	242,2,c	;volatile
  1621   001786                     
  1622                           ; BSR set to: 0
  1623                           ;MCAL/TIMER0/timer0.c: 67:         (INTCONbits.GIE=1);
  1624   001786  8EF2               	bsf	242,7,c	;volatile
  1625   001788                     
  1626                           ; BSR set to: 0
  1627                           ;MCAL/TIMER0/timer0.c: 68:         (INTCONbits.PEIE=1);
  1628   001788  8CF2               	bsf	242,6,c	;volatile
  1629   00178A                     
  1630                           ; BSR set to: 0
  1631                           ;MCAL/TIMER0/timer0.c: 70:         (INTCONbits.TMR0IE = 1);
  1632   00178A  8AF2               	bsf	242,5,c	;volatile
  1633   00178C                     
  1634                           ; BSR set to: 0
  1635                           ;MCAL/TIMER0/timer0.c: 71:         TMR0_InterruptHandler=_timer->TMR0_InterruptHandler;
  1636   00178C  519D               	movf	Timer0_Init@_timer& (0+255),w,b
  1637   00178E  6ED9               	movwf	fsr2l,c
  1638   001790  6ADA               	clrf	fsr2h,c
  1639   001792  CFDE F034          	movff	postinc2,_TMR0_InterruptHandler
  1640   001796  CFDD F035          	movff	postdec2,_TMR0_InterruptHandler+1
  1641   00179A                     
  1642                           ; BSR set to: 0
  1643                           ;MCAL/TIMER0/timer0.c: 74:         (T0CONbits.TMR0ON=1);
  1644   00179A  8ED5               	bsf	213,7,c	;volatile
  1645   00179C                     
  1646                           ; BSR set to: 0
  1647                           ;MCAL/TIMER0/timer0.c: 75:         ret = (Std_ReturnType)0x01;
  1648   00179C  0E01               	movlw	1
  1649   00179E  6FA0               	movwf	Timer0_Init@ret& (0+255),b
  1650   0017A0                     l3772:
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;MCAL/TIMER0/timer0.c: 77:     return ret;
  1654   0017A0  51A0               	movf	Timer0_Init@ret& (0+255),w,b
  1655   0017A2                     
  1656                           ; BSR set to: 0
  1657   0017A2  0012               	return		;funcret
  1658   0017A4                     __end_of_Timer0_Init:
  1659                           	callstack 0
  1660                           
  1661 ;; *************** function _Timer0_Register_Size_Config *****************
  1662 ;; Defined at:
  1663 ;;		line 180 in file "MCAL/TIMER0/timer0.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  _timer          1    0[BANK0 ] PTR const struct .
  1666 ;;		 -> timer0(7), 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1678 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;Total ram usage:        1 bytes
  1683 ;; Hardware stack levels used: 1
  1684 ;; Hardware stack levels required when called: 5
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_Timer0_Init
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text8
  1693   001B86                     __ptext8:
  1694                           	callstack 0
  1695   001B86                     _Timer0_Register_Size_Config:
  1696                           	callstack 23
  1697   001B86                     
  1698                           ;MCAL/TIMER0/timer0.c: 181:     if(1 == _timer->timer0_register_size){
  1699   001B86  0100               	movlb	0	; () banked
  1700   001B88  519B               	movf	Timer0_Register_Size_Config@_timer& (0+255),w,b
  1701   001B8A  6ED9               	movwf	fsr2l,c
  1702   001B8C  6ADA               	clrf	fsr2h,c
  1703   001B8E  0E06               	movlw	6
  1704   001B90  26D9               	addwf	fsr2l,f,c
  1705   001B92  A2DF               	btfss	indf2,1,c
  1706   001B94  EFCE  F00D         	goto	u2961
  1707   001B98  EFD0  F00D         	goto	u2960
  1708   001B9C                     u2961:
  1709   001B9C  EFD3  F00D         	goto	l3666
  1710   001BA0                     u2960:
  1711   001BA0                     
  1712                           ; BSR set to: 0
  1713                           ;MCAL/TIMER0/timer0.c: 182:         (T0CONbits.T08BIT=1);
  1714   001BA0  8CD5               	bsf	213,6,c	;volatile
  1715                           
  1716                           ;MCAL/TIMER0/timer0.c: 183:     }
  1717   001BA2  EFE0  F00D         	goto	l619
  1718   001BA6                     l3666:
  1719                           
  1720                           ; BSR set to: 0
  1721   001BA6  519B               	movf	Timer0_Register_Size_Config@_timer& (0+255),w,b
  1722   001BA8  6ED9               	movwf	fsr2l,c
  1723   001BAA  6ADA               	clrf	fsr2h,c
  1724   001BAC  0E06               	movlw	6
  1725   001BAE  26D9               	addwf	fsr2l,f,c
  1726   001BB0  B2DF               	btfsc	indf2,1,c
  1727   001BB2  EFDD  F00D         	goto	u2971
  1728   001BB6  EFDF  F00D         	goto	u2970
  1729   001BBA                     u2971:
  1730   001BBA  EFE0  F00D         	goto	l619
  1731   001BBE                     u2970:
  1732   001BBE                     
  1733                           ; BSR set to: 0
  1734                           ;MCAL/TIMER0/timer0.c: 185:         (T0CONbits.T08BIT=0);
  1735   001BBE  9CD5               	bcf	213,6,c	;volatile
  1736   001BC0                     l619:
  1737                           
  1738                           ; BSR set to: 0
  1739   001BC0  0012               	return		;funcret
  1740   001BC2                     __end_of_Timer0_Register_Size_Config:
  1741                           	callstack 0
  1742                           
  1743 ;; *************** function _Timer0_Prescaler_Config *****************
  1744 ;; Defined at:
  1745 ;;		line 155 in file "MCAL/TIMER0/timer0.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  _timer          1    0[BANK0 ] PTR const struct .
  1748 ;;		 -> timer0(7), 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1760 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;Total ram usage:        2 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 5
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_Timer0_Init
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text9
  1775   001A02                     __ptext9:
  1776                           	callstack 0
  1777   001A02                     _Timer0_Prescaler_Config:
  1778                           	callstack 23
  1779   001A02                     
  1780                           ;MCAL/TIMER0/timer0.c: 156:     if(0 == _timer->prescaler_enable){
  1781   001A02  0100               	movlb	0	; () banked
  1782   001A04  519B               	movf	Timer0_Prescaler_Config@_timer& (0+255),w,b
  1783   001A06  6ED9               	movwf	fsr2l,c
  1784   001A08  6ADA               	clrf	fsr2h,c
  1785   001A0A  0E06               	movlw	6
  1786   001A0C  26D9               	addwf	fsr2l,f,c
  1787   001A0E  B0DF               	btfsc	indf2,0,c
  1788   001A10  EF0C  F00D         	goto	u2901
  1789   001A14  EF0E  F00D         	goto	u2900
  1790   001A18                     u2901:
  1791   001A18  EF1D  F00D         	goto	l3642
  1792   001A1C                     u2900:
  1793   001A1C                     
  1794                           ; BSR set to: 0
  1795                           ;MCAL/TIMER0/timer0.c: 157:         (T0CONbits.PSA=0);
  1796   001A1C  96D5               	bcf	213,3,c	;volatile
  1797   001A1E                     
  1798                           ; BSR set to: 0
  1799                           ;MCAL/TIMER0/timer0.c: 158:         T0CONbits.T0PS = _timer->prescaler_value;
  1800   001A1E  519B               	movf	Timer0_Prescaler_Config@_timer& (0+255),w,b
  1801   001A20  6ED9               	movwf	fsr2l,c
  1802   001A22  6ADA               	clrf	fsr2h,c
  1803   001A24  0E03               	movlw	3
  1804   001A26  26D9               	addwf	fsr2l,f,c
  1805   001A28  50DF               	movf	indf2,w,c
  1806   001A2A  6F9C               	movwf	??_Timer0_Prescaler_Config& (0+255),b
  1807   001A2C  50D5               	movf	213,w,c	;volatile
  1808   001A2E  199C               	xorwf	??_Timer0_Prescaler_Config& (0+255),w,b
  1809   001A30  0BF8               	andlw	-8
  1810   001A32  199C               	xorwf	??_Timer0_Prescaler_Config& (0+255),w,b
  1811   001A34  6ED5               	movwf	213,c	;volatile
  1812                           
  1813                           ;MCAL/TIMER0/timer0.c: 159:     }
  1814   001A36  EF2A  F00D         	goto	l604
  1815   001A3A                     l3642:
  1816                           
  1817                           ; BSR set to: 0
  1818   001A3A  519B               	movf	Timer0_Prescaler_Config@_timer& (0+255),w,b
  1819   001A3C  6ED9               	movwf	fsr2l,c
  1820   001A3E  6ADA               	clrf	fsr2h,c
  1821   001A40  0E06               	movlw	6
  1822   001A42  26D9               	addwf	fsr2l,f,c
  1823   001A44  A0DF               	btfss	indf2,0,c
  1824   001A46  EF27  F00D         	goto	u2911
  1825   001A4A  EF29  F00D         	goto	u2910
  1826   001A4E                     u2911:
  1827   001A4E  EF2A  F00D         	goto	l604
  1828   001A52                     u2910:
  1829   001A52                     
  1830                           ; BSR set to: 0
  1831                           ;MCAL/TIMER0/timer0.c: 161:         (T0CONbits.PSA=1);
  1832   001A52  86D5               	bsf	213,3,c	;volatile
  1833   001A54                     l604:
  1834                           
  1835                           ; BSR set to: 0
  1836   001A54  0012               	return		;funcret
  1837   001A56                     __end_of_Timer0_Prescaler_Config:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _Timer0_Mode_Select *****************
  1841 ;; Defined at:
  1842 ;;		line 165 in file "MCAL/TIMER0/timer0.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  _timer          1    0[BANK0 ] PTR const struct .
  1845 ;;		 -> timer0(7), 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1857 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;Total ram usage:        1 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; Hardware stack levels required when called: 5
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_Timer0_Init
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text10
  1872   0017A4                     __ptext10:
  1873                           	callstack 0
  1874   0017A4                     _Timer0_Mode_Select:
  1875                           	callstack 23
  1876   0017A4                     
  1877                           ;MCAL/TIMER0/timer0.c: 166:     if(1 == _timer->timer0_mode){
  1878   0017A4  0100               	movlb	0	; () banked
  1879   0017A6  519B               	movf	Timer0_Mode_Select@_timer& (0+255),w,b
  1880   0017A8  6ED9               	movwf	fsr2l,c
  1881   0017AA  6ADA               	clrf	fsr2h,c
  1882   0017AC  0E06               	movlw	6
  1883   0017AE  26D9               	addwf	fsr2l,f,c
  1884   0017B0  A4DF               	btfss	indf2,2,c
  1885   0017B2  EFDD  F00B         	goto	u2921
  1886   0017B6  EFDF  F00B         	goto	u2920
  1887   0017BA                     u2921:
  1888   0017BA  EFE2  F00B         	goto	l3650
  1889   0017BE                     u2920:
  1890   0017BE                     
  1891                           ; BSR set to: 0
  1892                           ;MCAL/TIMER0/timer0.c: 167:         (T0CONbits.T0CS=0);
  1893   0017BE  9AD5               	bcf	213,5,c	;volatile
  1894                           
  1895                           ;MCAL/TIMER0/timer0.c: 168:     }
  1896   0017C0  EF0D  F00C         	goto	l613
  1897   0017C4                     l3650:
  1898                           
  1899                           ; BSR set to: 0
  1900   0017C4  519B               	movf	Timer0_Mode_Select@_timer& (0+255),w,b
  1901   0017C6  6ED9               	movwf	fsr2l,c
  1902   0017C8  6ADA               	clrf	fsr2h,c
  1903   0017CA  0E06               	movlw	6
  1904   0017CC  26D9               	addwf	fsr2l,f,c
  1905   0017CE  B4DF               	btfsc	indf2,2,c
  1906   0017D0  EFEC  F00B         	goto	u2931
  1907   0017D4  EFEE  F00B         	goto	u2930
  1908   0017D8                     u2931:
  1909   0017D8  EF0D  F00C         	goto	l613
  1910   0017DC                     u2930:
  1911   0017DC                     
  1912                           ; BSR set to: 0
  1913                           ;MCAL/TIMER0/timer0.c: 170:         (T0CONbits.T0CS=1);
  1914   0017DC  8AD5               	bsf	213,5,c	;volatile
  1915   0017DE                     
  1916                           ; BSR set to: 0
  1917                           ;MCAL/TIMER0/timer0.c: 171:         if(0 == _timer->timer0_counter_edge){
  1918   0017DE  519B               	movf	Timer0_Mode_Select@_timer& (0+255),w,b
  1919   0017E0  6ED9               	movwf	fsr2l,c
  1920   0017E2  6ADA               	clrf	fsr2h,c
  1921   0017E4  0E06               	movlw	6
  1922   0017E6  26D9               	addwf	fsr2l,f,c
  1923   0017E8  B6DF               	btfsc	indf2,3,c
  1924   0017EA  EFF9  F00B         	goto	u2941
  1925   0017EE  EFFB  F00B         	goto	u2940
  1926   0017F2                     u2941:
  1927   0017F2  EFFE  F00B         	goto	l3658
  1928   0017F6                     u2940:
  1929   0017F6                     
  1930                           ; BSR set to: 0
  1931                           ;MCAL/TIMER0/timer0.c: 172:             (T0CONbits.T0SE=0);
  1932   0017F6  98D5               	bcf	213,4,c	;volatile
  1933                           
  1934                           ;MCAL/TIMER0/timer0.c: 173:         }
  1935   0017F8  EF0D  F00C         	goto	l613
  1936   0017FC                     l3658:
  1937                           
  1938                           ; BSR set to: 0
  1939   0017FC  519B               	movf	Timer0_Mode_Select@_timer& (0+255),w,b
  1940   0017FE  6ED9               	movwf	fsr2l,c
  1941   001800  6ADA               	clrf	fsr2h,c
  1942   001802  0E06               	movlw	6
  1943   001804  26D9               	addwf	fsr2l,f,c
  1944   001806  A6DF               	btfss	indf2,3,c
  1945   001808  EF08  F00C         	goto	u2951
  1946   00180C  EF0A  F00C         	goto	u2950
  1947   001810                     u2951:
  1948   001810  EF0D  F00C         	goto	l609
  1949   001814                     u2950:
  1950   001814                     
  1951                           ; BSR set to: 0
  1952                           ;MCAL/TIMER0/timer0.c: 175:             (T0CONbits.T0SE=1);
  1953   001814  88D5               	bsf	213,4,c	;volatile
  1954   001816  EF0D  F00C         	goto	l613
  1955   00181A                     l609:
  1956   00181A                     l613:
  1957                           
  1958                           ; BSR set to: 0
  1959   00181A  0012               	return		;funcret
  1960   00181C                     __end_of_Timer0_Mode_Select:
  1961                           	callstack 0
  1962                           
  1963 ;; *************** function _InterruptManager *****************
  1964 ;; Defined at:
  1965 ;;		line 16 in file "MCAL/INTERRUPT/mcall_interrupt_manager.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;		None
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;		None
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;Total ram usage:        8 bytes
  1984 ;; Hardware stack levels used: 1
  1985 ;; Hardware stack levels required when called: 4
  1986 ;; This function calls:
  1987 ;;		_TMR0_ISR
  1988 ;; This function is called by:
  1989 ;;		Interrupt level 2
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	intcode
  1994   000008                     __pintcode:
  1995                           	callstack 0
  1996   000008                     _InterruptManager:
  1997                           	callstack 22
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;incstack = 0
  2001   000008  826B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2002   00000A  ED79  F00C         	call	int_func,f	;refresh shadow registers
  2003                           
  2004                           	psect	intcode_body
  2005   0018F2                     __pintcode_body:
  2006                           	callstack 22
  2007   0018F2                     int_func:
  2008                           	callstack 22
  2009   0018F2  0006               	pop		; remove dummy address from shadow register refresh
  2010   0018F4  CFFA F063          	movff	pclath,??_InterruptManager
  2011   0018F8  CFFB F064          	movff	pclatu,??_InterruptManager+1
  2012   0018FC  CFE1 F065          	movff	fsr1l,??_InterruptManager+2
  2013   001900  CFE2 F066          	movff	fsr1h,??_InterruptManager+3
  2014   001904  CFD9 F067          	movff	fsr2l,??_InterruptManager+4
  2015   001908  CFDA F068          	movff	fsr2h,??_InterruptManager+5
  2016   00190C  CFF3 F069          	movff	prodl,??_InterruptManager+6
  2017   001910  CFF4 F06A          	movff	prodh,??_InterruptManager+7
  2018   001914                     
  2019                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 18:     if((1 == INTCONbits.T0IE) && (1 == IN
      +                          TCONbits.T0IF)){
  2020   001914  AAF2               	btfss	242,5,c	;volatile
  2021   001916  EF8F  F00C         	goto	i2u342_41
  2022   00191A  EF91  F00C         	goto	i2u342_40
  2023   00191E                     i2u342_41:
  2024   00191E  EF9A  F00C         	goto	i2l338
  2025   001922                     i2u342_40:
  2026   001922  A4F2               	btfss	242,2,c	;volatile
  2027   001924  EF96  F00C         	goto	i2u343_41
  2028   001928  EF98  F00C         	goto	i2u343_40
  2029   00192C                     i2u343_41:
  2030   00192C  EF9A  F00C         	goto	i2l338
  2031   001930                     i2u343_40:
  2032   001930                     
  2033                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 19:         TMR0_ISR();
  2034   001930  ECE1  F00D         	call	_TMR0_ISR	;wreg free
  2035   001934                     i2l338:
  2036   001934  C06A  FFF4         	movff	??_InterruptManager+7,prodh
  2037   001938  C069  FFF3         	movff	??_InterruptManager+6,prodl
  2038   00193C  C068  FFDA         	movff	??_InterruptManager+5,fsr2h
  2039   001940  C067  FFD9         	movff	??_InterruptManager+4,fsr2l
  2040   001944  C066  FFE2         	movff	??_InterruptManager+3,fsr1h
  2041   001948  C065  FFE1         	movff	??_InterruptManager+2,fsr1l
  2042   00194C  C064  FFFB         	movff	??_InterruptManager+1,pclatu
  2043   001950  C063  FFFA         	movff	??_InterruptManager,pclath
  2044   001954  926B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2045   001956  0011               	retfie		f
  2046   001958                     __end_of_InterruptManager:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _TMR0_ISR *****************
  2050 ;; Defined at:
  2051 ;;		line 192 in file "MCAL/TIMER0/timer0.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;Total ram usage:        0 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 3
  2072 ;; This function calls:
  2073 ;;		NULL
  2074 ;;		_MY_TMR0_ISR
  2075 ;; This function is called by:
  2076 ;;		_InterruptManager
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text12
  2081   001BC2                     __ptext12:
  2082                           	callstack 0
  2083   001BC2                     _TMR0_ISR:
  2084                           	callstack 22
  2085   001BC2                     
  2086                           ;MCAL/TIMER0/timer0.c: 194:     (INTCONbits.TMR0IF = 0);
  2087   001BC2  94F2               	bcf	242,2,c	;volatile
  2088   001BC4                     
  2089                           ;MCAL/TIMER0/timer0.c: 196:     TMR0H = (timer0_preload) >> 8;
  2090   001BC4  5033               	movf	(_timer0_preload+1)^0,w,c
  2091   001BC6  6ED7               	movwf	215,c	;volatile
  2092   001BC8                     
  2093                           ;MCAL/TIMER0/timer0.c: 197:     TMR0L = (uint8)(timer0_preload);
  2094   001BC8  C032  FFD6         	movff	_timer0_preload,4054	;volatile
  2095   001BCC                     
  2096                           ;MCAL/TIMER0/timer0.c: 199:     if(TMR0_InterruptHandler){TMR0_InterruptHandler();}
  2097   001BCC  5034               	movf	_TMR0_InterruptHandler^0,w,c
  2098   001BCE  1035               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  2099   001BD0  B4D8               	btfsc	status,2,c
  2100   001BD2  EFED  F00D         	goto	i2u330_41
  2101   001BD6  EFEF  F00D         	goto	i2u330_40
  2102   001BDA                     i2u330_41:
  2103   001BDA  EFFB  F00D         	goto	i2l623
  2104   001BDE                     i2u330_40:
  2105   001BDE  D802               	call	i2u331_48
  2106   001BE0  EFFB  F00D         	goto	i2u331_49
  2107   001BE4                     i2u331_48:
  2108   001BE4  0005               	push	
  2109   001BE6  6EFA               	movwf	pclath,c
  2110   001BE8  5034               	movf	_TMR0_InterruptHandler^0,w,c
  2111   001BEA  6EFD               	movwf	tosl,c
  2112   001BEC  5035               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  2113   001BEE  6EFE               	movwf	tosh,c
  2114   001BF0  6AFF               	clrf	tosu,c
  2115   001BF2  50FA               	movf	pclath,w,c
  2116   001BF4  0012               	return		;indir
  2117   001BF6                     i2u331_49:
  2118   001BF6                     i2l623:
  2119   001BF6  0012               	return		;funcret
  2120   001BF8                     __end_of_TMR0_ISR:
  2121                           	callstack 0
  2122                           
  2123 ;; *************** function _MY_TMR0_ISR *****************
  2124 ;; Defined at:
  2125 ;;		line 25 in file "app.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;Total ram usage:        0 bytes
  2144 ;; Hardware stack levels used: 1
  2145 ;; Hardware stack levels required when called: 2
  2146 ;; This function calls:
  2147 ;;		___awdiv
  2148 ;;		___awmod
  2149 ;;		_led_off
  2150 ;;		_led_on
  2151 ;;		_seven_segment_write
  2152 ;; This function is called by:
  2153 ;;		_TMR0_ISR
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text13
  2158   001006                     __ptext13:
  2159                           	callstack 0
  2160   001006                     _MY_TMR0_ISR:
  2161                           	callstack 22
  2162   001006                     
  2163                           ;app.c: 27:     if(red_counter<=60 && red_counter>=30){
  2164   001006  0E3D               	movlw	61
  2165   001008  600C               	cpfslt	_red_counter^0,c	;volatile
  2166   00100A  EF09  F008         	goto	i2u308_41
  2167   00100E  EF0B  F008         	goto	i2u308_40
  2168   001012                     i2u308_41:
  2169   001012  EF4A  F008         	goto	i2l3788
  2170   001016                     i2u308_40:
  2171   001016  0E1D               	movlw	29
  2172   001018  640C               	cpfsgt	_red_counter^0,c	;volatile
  2173   00101A  EF11  F008         	goto	i2u309_41
  2174   00101E  EF13  F008         	goto	i2u309_40
  2175   001022                     i2u309_41:
  2176   001022  EF4A  F008         	goto	i2l3788
  2177   001026                     i2u309_40:
  2178   001026                     
  2179                           ;app.c: 28:         led_on(&led_red);
  2180   001026  0E2A               	movlw	low _led_red
  2181   001028  6E5E               	movwf	led_on@led^0,c
  2182   00102A  EC79  F00D         	call	_led_on	;wreg free
  2183                           
  2184                           ;app.c: 29:         led_off(&led_green);
  2185   00102E  0E28               	movlw	low _led_green
  2186   001030  6E5E               	movwf	led_off@led^0,c
  2187   001032  EC9E  F00D         	call	_led_off	;wreg free
  2188   001036                     
  2189                           ;app.c: 31:         if(red_counter<=9){
  2190   001036  0E0A               	movlw	10
  2191   001038  600C               	cpfslt	_red_counter^0,c	;volatile
  2192   00103A  EF21  F008         	goto	i2u310_41
  2193   00103E  EF23  F008         	goto	i2u310_40
  2194   001042                     i2u310_41:
  2195   001042  EF2B  F008         	goto	i2l3786
  2196   001046                     i2u310_40:
  2197   001046                     
  2198                           ;app.c: 32:             seven_segment_write(&seg_red1,red_counter);
  2199   001046  0E21               	movlw	low _seg_red1
  2200   001048  6E5E               	movwf	seven_segment_write@seg^0,c
  2201   00104A  C00C  F05F         	movff	_red_counter,seven_segment_write@num	;volatile
  2202   00104E  EC0E  F00C         	call	_seven_segment_write	;wreg free
  2203                           
  2204                           ;app.c: 33:         }
  2205   001052  EF4A  F008         	goto	i2l3788
  2206   001056                     i2l3786:
  2207                           
  2208                           ;app.c: 35:             seven_segment_write(&seg_red2,(red_counter/10)-3);
  2209   001056  0E1C               	movlw	low _seg_red2
  2210   001058  6E5E               	movwf	seven_segment_write@seg^0,c
  2211   00105A  C00C  F056         	movff	_red_counter,___awdiv@dividend	;volatile
  2212   00105E  6A57               	clrf	(___awdiv@dividend+1)^0,c
  2213   001060  0E00               	movlw	0
  2214   001062  6E59               	movwf	(___awdiv@divisor+1)^0,c
  2215   001064  0E0A               	movlw	10
  2216   001066  6E58               	movwf	___awdiv@divisor^0,c
  2217   001068  ECCF  F00A         	call	___awdiv	;wreg free
  2218   00106C  5056               	movf	?___awdiv^0,w,c
  2219   00106E  0FFD               	addlw	253
  2220   001070  6E5F               	movwf	seven_segment_write@num^0,c
  2221   001072  EC0E  F00C         	call	_seven_segment_write	;wreg free
  2222                           
  2223                           ;app.c: 36:             seven_segment_write(&seg_red1,(red_counter%10));
  2224   001076  0E21               	movlw	low _seg_red1
  2225   001078  6E5E               	movwf	seven_segment_write@seg^0,c
  2226   00107A  C00C  F056         	movff	_red_counter,___awmod@dividend	;volatile
  2227   00107E  6A57               	clrf	(___awmod@dividend+1)^0,c
  2228   001080  0E00               	movlw	0
  2229   001082  6E59               	movwf	(___awmod@divisor+1)^0,c
  2230   001084  0E0A               	movlw	10
  2231   001086  6E58               	movwf	___awmod@divisor^0,c
  2232   001088  EC31  F00B         	call	___awmod	;wreg free
  2233   00108C  5056               	movf	?___awmod^0,w,c
  2234   00108E  6E5F               	movwf	seven_segment_write@num^0,c
  2235   001090  EC0E  F00C         	call	_seven_segment_write	;wreg free
  2236   001094                     i2l3788:
  2237                           
  2238                           ;app.c: 39:     if(red_counter<=35 && red_counter>=31){
  2239   001094  0E24               	movlw	36
  2240   001096  600C               	cpfslt	_red_counter^0,c	;volatile
  2241   001098  EF50  F008         	goto	i2u311_41
  2242   00109C  EF52  F008         	goto	i2u311_40
  2243   0010A0                     i2u311_41:
  2244   0010A0  EF5E  F008         	goto	i2l3794
  2245   0010A4                     i2u311_40:
  2246   0010A4  0E1E               	movlw	30
  2247   0010A6  640C               	cpfsgt	_red_counter^0,c	;volatile
  2248   0010A8  EF58  F008         	goto	i2u312_41
  2249   0010AC  EF5A  F008         	goto	i2u312_40
  2250   0010B0                     i2u312_41:
  2251   0010B0  EF5E  F008         	goto	i2l3794
  2252   0010B4                     i2u312_40:
  2253   0010B4                     
  2254                           ;app.c: 40:         led_on(&led_yellow);
  2255   0010B4  0E26               	movlw	low _led_yellow
  2256   0010B6  6E5E               	movwf	led_on@led^0,c
  2257   0010B8  EC79  F00D         	call	_led_on	;wreg free
  2258   0010BC                     i2l3794:
  2259                           
  2260                           ;app.c: 43:     if(red_counter<=30){
  2261   0010BC  0E1F               	movlw	31
  2262   0010BE  600C               	cpfslt	_red_counter^0,c	;volatile
  2263   0010C0  EF64  F008         	goto	i2u313_41
  2264   0010C4  EF66  F008         	goto	i2u313_40
  2265   0010C8                     i2u313_41:
  2266   0010C8  EF67  F008         	goto	i2l3798
  2267   0010CC                     i2u313_40:
  2268   0010CC                     
  2269                           ;app.c: 44:         green_counter--;
  2270   0010CC  060B               	decf	_green_counter^0,f,c	;volatile
  2271   0010CE                     i2l3798:
  2272                           
  2273                           ;app.c: 48:     if(green_counter<=60 && green_counter>=31){
  2274   0010CE  0E3D               	movlw	61
  2275   0010D0  600B               	cpfslt	_green_counter^0,c	;volatile
  2276   0010D2  EF6D  F008         	goto	i2u314_41
  2277   0010D6  EF6F  F008         	goto	i2u314_40
  2278   0010DA                     i2u314_41:
  2279   0010DA  EFBE  F008         	goto	i2l3816
  2280   0010DE                     i2u314_40:
  2281   0010DE  0E1E               	movlw	30
  2282   0010E0  640B               	cpfsgt	_green_counter^0,c	;volatile
  2283   0010E2  EF75  F008         	goto	i2u315_41
  2284   0010E6  EF77  F008         	goto	i2u315_40
  2285   0010EA                     i2u315_41:
  2286   0010EA  EFBE  F008         	goto	i2l3816
  2287   0010EE                     i2u315_40:
  2288   0010EE                     
  2289                           ;app.c: 49:         seven_segment_write(&seg_red2,0);
  2290   0010EE  0E1C               	movlw	low _seg_red2
  2291   0010F0  6E5E               	movwf	seven_segment_write@seg^0,c
  2292   0010F2  0E00               	movlw	0
  2293   0010F4  6E5F               	movwf	seven_segment_write@num^0,c
  2294   0010F6  EC0E  F00C         	call	_seven_segment_write	;wreg free
  2295                           
  2296                           ;app.c: 50:         seven_segment_write(&seg_red1,0);
  2297   0010FA  0E21               	movlw	low _seg_red1
  2298   0010FC  6E5E               	movwf	seven_segment_write@seg^0,c
  2299   0010FE  0E00               	movlw	0
  2300   001100  6E5F               	movwf	seven_segment_write@num^0,c
  2301   001102  EC0E  F00C         	call	_seven_segment_write	;wreg free
  2302   001106                     
  2303                           ;app.c: 51:         led_off(&led_red);
  2304   001106  0E2A               	movlw	low _led_red
  2305   001108  6E5E               	movwf	led_off@led^0,c
  2306   00110A  EC9E  F00D         	call	_led_off	;wreg free
  2307   00110E                     
  2308                           ;app.c: 52:         led_off(&led_yellow);
  2309   00110E  0E26               	movlw	low _led_yellow
  2310   001110  6E5E               	movwf	led_off@led^0,c
  2311   001112  EC9E  F00D         	call	_led_off	;wreg free
  2312   001116                     
  2313                           ;app.c: 53:         led_on(&led_green);
  2314   001116  0E28               	movlw	low _led_green
  2315   001118  6E5E               	movwf	led_on@led^0,c
  2316   00111A  EC79  F00D         	call	_led_on	;wreg free
  2317   00111E                     
  2318                           ;app.c: 55:         if(green_counter<=9){
  2319   00111E  0E0A               	movlw	10
  2320   001120  600B               	cpfslt	_green_counter^0,c	;volatile
  2321   001122  EF95  F008         	goto	i2u316_41
  2322   001126  EF97  F008         	goto	i2u316_40
  2323   00112A                     i2u316_41:
  2324   00112A  EF9F  F008         	goto	i2l3814
  2325   00112E                     i2u316_40:
  2326   00112E                     
  2327                           ;app.c: 56:             seven_segment_write(&seg_green1,green_counter);
  2328   00112E  0E17               	movlw	low _seg_green1
  2329   001130  6E5E               	movwf	seven_segment_write@seg^0,c
  2330   001132  C00B  F05F         	movff	_green_counter,seven_segment_write@num	;volatile
  2331   001136  EC0E  F00C         	call	_seven_segment_write	;wreg free
  2332                           
  2333                           ;app.c: 57:         }
  2334   00113A  EFBE  F008         	goto	i2l3816
  2335   00113E                     i2l3814:
  2336                           
  2337                           ;app.c: 59:             seven_segment_write(&seg_green2,(green_counter/10)-3);
  2338   00113E  0E12               	movlw	low _seg_green2
  2339   001140  6E5E               	movwf	seven_segment_write@seg^0,c
  2340   001142  C00B  F056         	movff	_green_counter,___awdiv@dividend	;volatile
  2341   001146  6A57               	clrf	(___awdiv@dividend+1)^0,c
  2342   001148  0E00               	movlw	0
  2343   00114A  6E59               	movwf	(___awdiv@divisor+1)^0,c
  2344   00114C  0E0A               	movlw	10
  2345   00114E  6E58               	movwf	___awdiv@divisor^0,c
  2346   001150  ECCF  F00A         	call	___awdiv	;wreg free
  2347   001154  5056               	movf	?___awdiv^0,w,c
  2348   001156  0FFD               	addlw	253
  2349   001158  6E5F               	movwf	seven_segment_write@num^0,c
  2350   00115A  EC0E  F00C         	call	_seven_segment_write	;wreg free
  2351                           
  2352                           ;app.c: 60:             seven_segment_write(&seg_green1,(green_counter%10));
  2353   00115E  0E17               	movlw	low _seg_green1
  2354   001160  6E5E               	movwf	seven_segment_write@seg^0,c
  2355   001162  C00B  F056         	movff	_green_counter,___awmod@dividend	;volatile
  2356   001166  6A57               	clrf	(___awmod@dividend+1)^0,c
  2357   001168  0E00               	movlw	0
  2358   00116A  6E59               	movwf	(___awmod@divisor+1)^0,c
  2359   00116C  0E0A               	movlw	10
  2360   00116E  6E58               	movwf	___awmod@divisor^0,c
  2361   001170  EC31  F00B         	call	___awmod	;wreg free
  2362   001174  5056               	movf	?___awmod^0,w,c
  2363   001176  6E5F               	movwf	seven_segment_write@num^0,c
  2364   001178  EC0E  F00C         	call	_seven_segment_write	;wreg free
  2365   00117C                     i2l3816:
  2366                           
  2367                           ;app.c: 63:     if(green_counter<=35 && green_counter>=31){
  2368   00117C  0E24               	movlw	36
  2369   00117E  600B               	cpfslt	_green_counter^0,c	;volatile
  2370   001180  EFC4  F008         	goto	i2u317_41
  2371   001184  EFC6  F008         	goto	i2u317_40
  2372   001188                     i2u317_41:
  2373   001188  EFD2  F008         	goto	i2l3822
  2374   00118C                     i2u317_40:
  2375   00118C  0E1E               	movlw	30
  2376   00118E  640B               	cpfsgt	_green_counter^0,c	;volatile
  2377   001190  EFCC  F008         	goto	i2u318_41
  2378   001194  EFCE  F008         	goto	i2u318_40
  2379   001198                     i2u318_41:
  2380   001198  EFD2  F008         	goto	i2l3822
  2381   00119C                     i2u318_40:
  2382   00119C                     
  2383                           ;app.c: 64:         led_on(&led_yellow);
  2384   00119C  0E26               	movlw	low _led_yellow
  2385   00119E  6E5E               	movwf	led_on@led^0,c
  2386   0011A0  EC79  F00D         	call	_led_on	;wreg free
  2387   0011A4                     i2l3822:
  2388                           
  2389                           ;app.c: 67:     if(green_counter==30){
  2390   0011A4  0E1E               	movlw	30
  2391   0011A6  180B               	xorwf	_green_counter^0,w,c	;volatile
  2392   0011A8  A4D8               	btfss	status,2,c
  2393   0011AA  EFD9  F008         	goto	i2u319_41
  2394   0011AE  EFDB  F008         	goto	i2u319_40
  2395   0011B2                     i2u319_41:
  2396   0011B2  EFF7  F008         	goto	i2l3836
  2397   0011B6                     i2u319_40:
  2398   0011B6                     
  2399                           ;app.c: 68:         green_counter=61;
  2400   0011B6  0E3D               	movlw	61
  2401   0011B8  6E0B               	movwf	_green_counter^0,c	;volatile
  2402                           
  2403                           ;app.c: 69:         red_counter=61;
  2404   0011BA  0E3D               	movlw	61
  2405   0011BC  6E0C               	movwf	_red_counter^0,c	;volatile
  2406   0011BE                     
  2407                           ;app.c: 70:         seven_segment_write(&seg_green2,0);
  2408   0011BE  0E12               	movlw	low _seg_green2
  2409   0011C0  6E5E               	movwf	seven_segment_write@seg^0,c
  2410   0011C2  0E00               	movlw	0
  2411   0011C4  6E5F               	movwf	seven_segment_write@num^0,c
  2412   0011C6  EC0E  F00C         	call	_seven_segment_write	;wreg free
  2413   0011CA                     
  2414                           ;app.c: 71:         seven_segment_write(&seg_green1,0);
  2415   0011CA  0E17               	movlw	low _seg_green1
  2416   0011CC  6E5E               	movwf	seven_segment_write@seg^0,c
  2417   0011CE  0E00               	movlw	0
  2418   0011D0  6E5F               	movwf	seven_segment_write@num^0,c
  2419   0011D2  EC0E  F00C         	call	_seven_segment_write	;wreg free
  2420   0011D6                     
  2421                           ;app.c: 72:         led_off(&led_red);
  2422   0011D6  0E2A               	movlw	low _led_red
  2423   0011D8  6E5E               	movwf	led_off@led^0,c
  2424   0011DA  EC9E  F00D         	call	_led_off	;wreg free
  2425   0011DE                     
  2426                           ;app.c: 73:         led_off(&led_green);
  2427   0011DE  0E28               	movlw	low _led_green
  2428   0011E0  6E5E               	movwf	led_off@led^0,c
  2429   0011E2  EC9E  F00D         	call	_led_off	;wreg free
  2430   0011E6                     
  2431                           ;app.c: 74:         led_off(&led_yellow);
  2432   0011E6  0E26               	movlw	low _led_yellow
  2433   0011E8  6E5E               	movwf	led_off@led^0,c
  2434   0011EA  EC9E  F00D         	call	_led_off	;wreg free
  2435   0011EE                     i2l3836:
  2436                           
  2437                           ;app.c: 76:     red_counter--;
  2438   0011EE  060C               	decf	_red_counter^0,f,c	;volatile
  2439   0011F0  0012               	return		;funcret
  2440   0011F2                     __end_of_MY_TMR0_ISR:
  2441                           	callstack 0
  2442                           
  2443 ;; *************** function _seven_segment_write *****************
  2444 ;; Defined at:
  2445 ;;		line 44 in file "ECUAL/7_SEGMENT/seven_segment.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  seg             1    8[COMRAM] PTR struct .
  2448 ;;		 -> seg_green2(5), seg_green1(5), seg_red2(5), seg_red1(5), 
  2449 ;;  num             1    9[COMRAM] unsigned char 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  ret             1    0        unsigned char 
  2452 ;;  gpio_ret        1   12[COMRAM] unsigned char 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      unsigned char 
  2455 ;; Registers used:
  2456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;Total ram usage:        5 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 1
  2469 ;; This function calls:
  2470 ;;		i2_gpio_pin_logic_write
  2471 ;; This function is called by:
  2472 ;;		_MY_TMR0_ISR
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text14
  2477   00181C                     __ptext14:
  2478                           	callstack 0
  2479   00181C                     _seven_segment_write:
  2480                           	callstack 22
  2481   00181C                     
  2482                           ;ECUAL/7_SEGMENT/seven_segment.c: 48:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  2483   00181C  0E00               	movlw	0
  2484   00181E  6E62               	movwf	seven_segment_write@gpio_ret^0,c
  2485                           
  2486                           ;ECUAL/7_SEGMENT/seven_segment.c: 49:     if(((void*)0)==seg || num>9){
  2487   001820  505E               	movf	seven_segment_write@seg^0,w,c
  2488   001822  B4D8               	btfsc	status,2,c
  2489   001824  EF16  F00C         	goto	i2u281_41
  2490   001828  EF18  F00C         	goto	i2u281_40
  2491   00182C                     i2u281_41:
  2492   00182C  EF20  F00C         	goto	i2l3580
  2493   001830                     i2u281_40:
  2494   001830  0E09               	movlw	9
  2495   001832  645F               	cpfsgt	seven_segment_write@num^0,c
  2496   001834  EF1E  F00C         	goto	i2u282_41
  2497   001838  EF20  F00C         	goto	i2u282_40
  2498   00183C                     i2u282_41:
  2499   00183C  EF22  F00C         	goto	i2l3582
  2500   001840                     i2u282_40:
  2501   001840                     i2l3580:
  2502                           
  2503                           ;ECUAL/7_SEGMENT/seven_segment.c: 51:     }
  2504   001840  EF45  F00C         	goto	i2l24
  2505   001844                     i2l3582:
  2506                           
  2507                           ;ECUAL/7_SEGMENT/seven_segment.c: 53:         for(counter=0;counter<8;counter++){
  2508   001844  0E00               	movlw	0
  2509   001846  6E52               	movwf	seven_segment_write@counter^0,c
  2510   001848                     i2l3584:
  2511   001848  0E07               	movlw	7
  2512   00184A  6452               	cpfsgt	seven_segment_write@counter^0,c
  2513   00184C  EF2A  F00C         	goto	i2u283_41
  2514   001850  EF2C  F00C         	goto	i2u283_40
  2515   001854                     i2u283_41:
  2516   001854  EF2E  F00C         	goto	i2l3588
  2517   001858                     i2u283_40:
  2518   001858  EF45  F00C         	goto	i2l3594
  2519   00185C                     i2l3588:
  2520                           
  2521                           ;ECUAL/7_SEGMENT/seven_segment.c: 54:              gpio_pin_logic_write(&(seg->seven_seg
      +                          ment_pins[counter]),(num>>counter)&0x1);
  2522   00185C  505E               	movf	seven_segment_write@seg^0,w,c
  2523   00185E  2452               	addwf	seven_segment_write@counter^0,w,c
  2524   001860  6E56               	movwf	i2gpio_pin_logic_write@pin^0,c
  2525   001862  C052  F060         	movff	seven_segment_write@counter,??_seven_segment_write
  2526   001866  C05F  F061         	movff	seven_segment_write@num,??_seven_segment_write+1
  2527   00186A  2A60               	incf	??_seven_segment_write^0,f,c
  2528   00186C  EF3A  F00C         	goto	i2u284_44
  2529   001870                     i2u284_45:
  2530   001870  90D8               	bcf	status,0,c
  2531   001872  3261               	rrcf	(??_seven_segment_write+1)^0,f,c
  2532   001874                     i2u284_44:
  2533   001874  2E60               	decfsz	??_seven_segment_write^0,f,c
  2534   001876  EF38  F00C         	goto	i2u284_45
  2535   00187A  5061               	movf	(??_seven_segment_write+1)^0,w,c
  2536   00187C  0B01               	andlw	1
  2537   00187E  6E57               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  2538   001880  EC35  F00A         	call	i2_gpio_pin_logic_write	;wreg free
  2539   001884                     
  2540                           ;ECUAL/7_SEGMENT/seven_segment.c: 56:         }
  2541   001884  2A52               	incf	seven_segment_write@counter^0,f,c
  2542   001886  EF24  F00C         	goto	i2l3584
  2543   00188A                     i2l3594:
  2544   00188A                     i2l24:
  2545   00188A  0012               	return		;funcret
  2546   00188C                     __end_of_seven_segment_write:
  2547                           	callstack 0
  2548                           
  2549 ;; *************** function _led_on *****************
  2550 ;; Defined at:
  2551 ;;		line 41 in file "ECUAL/LED/led.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  led             1    8[COMRAM] PTR struct .
  2554 ;;		 -> led_yellow(2), led_green(2), led_red(2), 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  ret             1    0        unsigned char 
  2557 ;;  gpio_ret        1    9[COMRAM] unsigned char 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  1    wreg      unsigned char 
  2560 ;; Registers used:
  2561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2567 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;Total ram usage:        2 bytes
  2572 ;; Hardware stack levels used: 1
  2573 ;; Hardware stack levels required when called: 1
  2574 ;; This function calls:
  2575 ;;		i2_gpio_pin_logic_write
  2576 ;; This function is called by:
  2577 ;;		_MY_TMR0_ISR
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text15
  2582   001AF2                     __ptext15:
  2583                           	callstack 0
  2584   001AF2                     _led_on:
  2585                           	callstack 22
  2586   001AF2                     
  2587                           ;ECUAL/LED/led.c: 44:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  2588   001AF2  0E00               	movlw	0
  2589   001AF4  6E5F               	movwf	led_on@gpio_ret^0,c
  2590                           
  2591                           ;ECUAL/LED/led.c: 45:     if(((void*)0)==led){
  2592   001AF6  505E               	movf	led_on@led^0,w,c
  2593   001AF8  A4D8               	btfss	status,2,c
  2594   001AFA  EF81  F00D         	goto	i2u286_41
  2595   001AFE  EF83  F00D         	goto	i2u286_40
  2596   001B02                     i2u286_41:
  2597   001B02  EF85  F00D         	goto	i2l3616
  2598   001B06                     i2u286_40:
  2599   001B06                     
  2600                           ;ECUAL/LED/led.c: 47:     }
  2601   001B06  EF9D  F00D         	goto	i2l175
  2602   001B0A                     i2l3616:
  2603   001B0A  C05E  F056         	movff	led_on@led,i2gpio_pin_logic_write@pin
  2604   001B0E  0E01               	movlw	1
  2605   001B10  6E57               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  2606   001B12  EC35  F00A         	call	i2_gpio_pin_logic_write	;wreg free
  2607   001B16                     
  2608                           ;ECUAL/LED/led.c: 50:         led->led_state=led->led_pin.logic;
  2609   001B16  505E               	movf	led_on@led^0,w,c
  2610   001B18  6ED9               	movwf	fsr2l,c
  2611   001B1A  6ADA               	clrf	fsr2h,c
  2612   001B1C  0E01               	movlw	1
  2613   001B1E  26D9               	addwf	fsr2l,f,c
  2614   001B20  505E               	movf	led_on@led^0,w,c
  2615   001B22  6EE1               	movwf	fsr1l,c
  2616   001B24  6AE2               	clrf	fsr1h,c
  2617   001B26  BEE7               	btfsc	indf1,7,c
  2618   001B28  EF98  F00D         	goto	i2u287_41
  2619   001B2C  EF9B  F00D         	goto	i2u287_40
  2620   001B30                     i2u287_41:
  2621   001B30  0E01               	movlw	1
  2622   001B32  EF9C  F00D         	goto	i2u287_46
  2623   001B36                     i2u287_40:
  2624   001B36  0E00               	movlw	0
  2625   001B38                     i2u287_46:
  2626   001B38  6EDF               	movwf	indf2,c
  2627   001B3A                     i2l175:
  2628   001B3A  0012               	return		;funcret
  2629   001B3C                     __end_of_led_on:
  2630                           	callstack 0
  2631                           
  2632 ;; *************** function _led_off *****************
  2633 ;; Defined at:
  2634 ;;		line 65 in file "ECUAL/LED/led.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  led             1    8[COMRAM] PTR struct .
  2637 ;;		 -> led_yellow(2), led_green(2), led_red(2), 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  ret             1    0        unsigned char 
  2640 ;;  gpio_ret        1    9[COMRAM] unsigned char 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      unsigned char 
  2643 ;; Registers used:
  2644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2650 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;Total ram usage:        2 bytes
  2655 ;; Hardware stack levels used: 1
  2656 ;; Hardware stack levels required when called: 1
  2657 ;; This function calls:
  2658 ;;		i2_gpio_pin_logic_write
  2659 ;; This function is called by:
  2660 ;;		_MY_TMR0_ISR
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text16
  2665   001B3C                     __ptext16:
  2666                           	callstack 0
  2667   001B3C                     _led_off:
  2668                           	callstack 22
  2669   001B3C                     
  2670                           ;ECUAL/LED/led.c: 68:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  2671   001B3C  0E00               	movlw	0
  2672   001B3E  6E5F               	movwf	led_off@gpio_ret^0,c
  2673                           
  2674                           ;ECUAL/LED/led.c: 69:     if(((void*)0)==led){
  2675   001B40  505E               	movf	led_off@led^0,w,c
  2676   001B42  A4D8               	btfss	status,2,c
  2677   001B44  EFA6  F00D         	goto	i2u288_41
  2678   001B48  EFA8  F00D         	goto	i2u288_40
  2679   001B4C                     i2u288_41:
  2680   001B4C  EFAA  F00D         	goto	i2l3628
  2681   001B50                     i2u288_40:
  2682   001B50                     
  2683                           ;ECUAL/LED/led.c: 71:     }
  2684   001B50  EFC2  F00D         	goto	i2l180
  2685   001B54                     i2l3628:
  2686   001B54  C05E  F056         	movff	led_off@led,i2gpio_pin_logic_write@pin
  2687   001B58  0E00               	movlw	0
  2688   001B5A  6E57               	movwf	i2gpio_pin_logic_write@pin_logic^0,c
  2689   001B5C  EC35  F00A         	call	i2_gpio_pin_logic_write	;wreg free
  2690   001B60                     
  2691                           ;ECUAL/LED/led.c: 74:         led->led_state=led->led_pin.logic;
  2692   001B60  505E               	movf	led_off@led^0,w,c
  2693   001B62  6ED9               	movwf	fsr2l,c
  2694   001B64  6ADA               	clrf	fsr2h,c
  2695   001B66  0E01               	movlw	1
  2696   001B68  26D9               	addwf	fsr2l,f,c
  2697   001B6A  505E               	movf	led_off@led^0,w,c
  2698   001B6C  6EE1               	movwf	fsr1l,c
  2699   001B6E  6AE2               	clrf	fsr1h,c
  2700   001B70  BEE7               	btfsc	indf1,7,c
  2701   001B72  EFBD  F00D         	goto	i2u289_41
  2702   001B76  EFC0  F00D         	goto	i2u289_40
  2703   001B7A                     i2u289_41:
  2704   001B7A  0E01               	movlw	1
  2705   001B7C  EFC1  F00D         	goto	i2u289_46
  2706   001B80                     i2u289_40:
  2707   001B80  0E00               	movlw	0
  2708   001B82                     i2u289_46:
  2709   001B82  6EDF               	movwf	indf2,c
  2710   001B84                     i2l180:
  2711   001B84  0012               	return		;funcret
  2712   001B86                     __end_of_led_off:
  2713                           	callstack 0
  2714                           
  2715 ;; *************** function i2_gpio_pin_logic_write *****************
  2716 ;; Defined at:
  2717 ;;		line 81 in file "MCAL/GPIO/gpio.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  pin             1    0[COMRAM] PTR struct .
  2720 ;;		 -> seg_green2$seven_segment_pins(4), seg_green1$seven_segment_pins(4), seg_red2$seven_segment_pins(4), seg_red1$sev
      +en_segment_pins(4), 
  2721 ;;		 -> seg_green2(5), seg_green1(5), led_yellow(2), seg_red2(5), 
  2722 ;;		 -> seg_red1(5), led_green(2), led_red(2), 
  2723 ;;  pin_logic       1    1[COMRAM] enum E2978
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  ret             1    7[COMRAM] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      unsigned char 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;Total ram usage:        8 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_seven_segment_write
  2745 ;;		_led_on
  2746 ;;		_led_off
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text17
  2751   00146A                     __ptext17:
  2752                           	callstack 0
  2753   00146A                     i2_gpio_pin_logic_write:
  2754                           	callstack 22
  2755   00146A                     
  2756                           ;MCAL/GPIO/gpio.c: 84:     if(((void*)0)==pin ||(pin->pin)>7 || pin_logic>1){
  2757   00146A  5056               	movf	i2gpio_pin_logic_write@pin^0,w,c
  2758   00146C  B4D8               	btfsc	status,2,c
  2759   00146E  EF3B  F00A         	goto	i2u273_41
  2760   001472  EF3D  F00A         	goto	i2u273_40
  2761   001476                     i2u273_41:
  2762   001476  EF55  F00A         	goto	i2l3540
  2763   00147A                     i2u273_40:
  2764   00147A  5056               	movf	i2gpio_pin_logic_write@pin^0,w,c
  2765   00147C  6ED9               	movwf	fsr2l,c
  2766   00147E  6ADA               	clrf	fsr2h,c
  2767   001480  30DF               	rrcf	223,w,c
  2768   001482  32E8               	rrcf	wreg,f,c
  2769   001484  32E8               	rrcf	wreg,f,c
  2770   001486  0B07               	andlw	7
  2771   001488  6E58               	movwf	??i2_gpio_pin_logic_write^0,c
  2772   00148A  0E08               	movlw	8
  2773   00148C  6058               	cpfslt	??i2_gpio_pin_logic_write^0,c
  2774   00148E  EF4B  F00A         	goto	i2u274_41
  2775   001492  EF4D  F00A         	goto	i2u274_40
  2776   001496                     i2u274_41:
  2777   001496  EF55  F00A         	goto	i2l3540
  2778   00149A                     i2u274_40:
  2779   00149A  0E01               	movlw	1
  2780   00149C  6457               	cpfsgt	i2gpio_pin_logic_write@pin_logic^0,c
  2781   00149E  EF53  F00A         	goto	i2u275_41
  2782   0014A2  EF55  F00A         	goto	i2u275_40
  2783   0014A6                     i2u275_41:
  2784   0014A6  EFAE  F00A         	goto	i2l3548
  2785   0014AA                     i2u275_40:
  2786   0014AA                     i2l3540:
  2787                           
  2788                           ;MCAL/GPIO/gpio.c: 85:         ret=(Std_ReturnType)0x00;
  2789   0014AA  0E00               	movlw	0
  2790   0014AC  6E5D               	movwf	i2gpio_pin_logic_write@ret^0,c
  2791                           
  2792                           ;MCAL/GPIO/gpio.c: 86:     }
  2793   0014AE  EFCD  F00A         	goto	i2l3554
  2794   0014B2                     i2l3542:
  2795                           
  2796                           ;MCAL/GPIO/gpio.c: 90:                 (*latx[pin->port] &= ~((uint8)1<<pin->pin));
  2797   0014B2  5056               	movf	i2gpio_pin_logic_write@pin^0,w,c
  2798   0014B4  6ED9               	movwf	fsr2l,c
  2799   0014B6  6ADA               	clrf	fsr2h,c
  2800   0014B8  30DF               	rrcf	223,w,c
  2801   0014BA  32E8               	rrcf	wreg,f,c
  2802   0014BC  32E8               	rrcf	wreg,f,c
  2803   0014BE  0B07               	andlw	7
  2804   0014C0  6E58               	movwf	??i2_gpio_pin_logic_write^0,c
  2805   0014C2  0E01               	movlw	1
  2806   0014C4  6E59               	movwf	(??i2_gpio_pin_logic_write+1)^0,c
  2807   0014C6  2A58               	incf	??i2_gpio_pin_logic_write^0,f,c
  2808   0014C8  EF68  F00A         	goto	i2u276_44
  2809   0014CC                     i2u276_45:
  2810   0014CC  90D8               	bcf	status,0,c
  2811   0014CE  3659               	rlcf	(??i2_gpio_pin_logic_write+1)^0,f,c
  2812   0014D0                     i2u276_44:
  2813   0014D0  2E58               	decfsz	??i2_gpio_pin_logic_write^0,f,c
  2814   0014D2  EF66  F00A         	goto	i2u276_45
  2815   0014D6  5059               	movf	(??i2_gpio_pin_logic_write+1)^0,w,c
  2816   0014D8  0AFF               	xorlw	255
  2817   0014DA  6E5A               	movwf	(??i2_gpio_pin_logic_write+2)^0,c
  2818   0014DC  5056               	movf	i2gpio_pin_logic_write@pin^0,w,c
  2819   0014DE  6ED9               	movwf	fsr2l,c
  2820   0014E0  6ADA               	clrf	fsr2h,c
  2821   0014E2  50DF               	movf	223,w,c
  2822   0014E4  0B07               	andlw	7
  2823   0014E6  0D02               	mullw	2
  2824   0014E8  50F3               	movf	243,w,c
  2825   0014EA  0F01               	addlw	low _latx
  2826   0014EC  6ED9               	movwf	fsr2l,c
  2827   0014EE  6ADA               	clrf	fsr2h,c
  2828   0014F0  CFDE F05B          	movff	postinc2,??i2_gpio_pin_logic_write+3
  2829   0014F4  CFDD F05C          	movff	postdec2,??i2_gpio_pin_logic_write+4
  2830   0014F8  C05B  FFD9         	movff	??i2_gpio_pin_logic_write+3,fsr2l
  2831   0014FC  C05C  FFDA         	movff	??i2_gpio_pin_logic_write+4,fsr2h
  2832   001500  505A               	movf	(??i2_gpio_pin_logic_write+2)^0,w,c
  2833   001502  16DF               	andwf	indf2,f,c
  2834                           
  2835                           ;MCAL/GPIO/gpio.c: 91:                 break;
  2836   001504  EFC3  F00A         	goto	i2l3550
  2837   001508                     i2l3544:
  2838                           
  2839                           ;MCAL/GPIO/gpio.c: 94:                 (*latx[pin->port] |= ((uint8)1<<pin->pin));
  2840   001508  5056               	movf	i2gpio_pin_logic_write@pin^0,w,c
  2841   00150A  6ED9               	movwf	fsr2l,c
  2842   00150C  6ADA               	clrf	fsr2h,c
  2843   00150E  30DF               	rrcf	223,w,c
  2844   001510  32E8               	rrcf	wreg,f,c
  2845   001512  32E8               	rrcf	wreg,f,c
  2846   001514  0B07               	andlw	7
  2847   001516  6E58               	movwf	??i2_gpio_pin_logic_write^0,c
  2848   001518  0E01               	movlw	1
  2849   00151A  6E59               	movwf	(??i2_gpio_pin_logic_write+1)^0,c
  2850   00151C  2A58               	incf	??i2_gpio_pin_logic_write^0,f,c
  2851   00151E  EF93  F00A         	goto	i2u277_44
  2852   001522                     i2u277_45:
  2853   001522  90D8               	bcf	status,0,c
  2854   001524  3659               	rlcf	(??i2_gpio_pin_logic_write+1)^0,f,c
  2855   001526                     i2u277_44:
  2856   001526  2E58               	decfsz	??i2_gpio_pin_logic_write^0,f,c
  2857   001528  EF91  F00A         	goto	i2u277_45
  2858   00152C  5056               	movf	i2gpio_pin_logic_write@pin^0,w,c
  2859   00152E  6ED9               	movwf	fsr2l,c
  2860   001530  6ADA               	clrf	fsr2h,c
  2861   001532  50DF               	movf	223,w,c
  2862   001534  0B07               	andlw	7
  2863   001536  0D02               	mullw	2
  2864   001538  50F3               	movf	243,w,c
  2865   00153A  0F01               	addlw	low _latx
  2866   00153C  6ED9               	movwf	fsr2l,c
  2867   00153E  6ADA               	clrf	fsr2h,c
  2868   001540  CFDE F05A          	movff	postinc2,??i2_gpio_pin_logic_write+2
  2869   001544  CFDD F05B          	movff	postdec2,??i2_gpio_pin_logic_write+3
  2870   001548  C05A  FFD9         	movff	??i2_gpio_pin_logic_write+2,fsr2l
  2871   00154C  C05B  FFDA         	movff	??i2_gpio_pin_logic_write+3,fsr2h
  2872   001550  5059               	movf	(??i2_gpio_pin_logic_write+1)^0,w,c
  2873   001552  12DF               	iorwf	indf2,f,c
  2874                           
  2875                           ;MCAL/GPIO/gpio.c: 95:                 break;
  2876   001554  EFC3  F00A         	goto	i2l3550
  2877   001558                     i2l3546:
  2878                           
  2879                           ;MCAL/GPIO/gpio.c: 99:         }
  2880   001558  EFC3  F00A         	goto	i2l3550
  2881   00155C                     i2l3548:
  2882   00155C  5057               	movf	i2gpio_pin_logic_write@pin_logic^0,w,c
  2883   00155E  6E58               	movwf	??i2_gpio_pin_logic_write^0,c
  2884   001560  6A59               	clrf	(??i2_gpio_pin_logic_write+1)^0,c
  2885                           
  2886                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2887                           ; Switch size 1, requested type "simple"
  2888                           ; Number of cases is 1, Range of values is 0 to 0
  2889                           ; switch strategies available:
  2890                           ; Name         Instructions Cycles
  2891                           ; simple_byte            4     3 (average)
  2892                           ;	Chosen strategy is simple_byte
  2893   001562  5059               	movf	(??i2_gpio_pin_logic_write+1)^0,w,c
  2894   001564  0A00               	xorlw	0	; case 0
  2895   001566  B4D8               	btfsc	status,2,c
  2896   001568  EFB8  F00A         	goto	i2l4212
  2897   00156C  EFAC  F00A         	goto	i2l3546
  2898   001570                     i2l4212:
  2899                           
  2900                           ; Switch size 1, requested type "simple"
  2901                           ; Number of cases is 2, Range of values is 0 to 1
  2902                           ; switch strategies available:
  2903                           ; Name         Instructions Cycles
  2904                           ; simple_byte            7     4 (average)
  2905                           ;	Chosen strategy is simple_byte
  2906   001570  5058               	movf	??i2_gpio_pin_logic_write^0,w,c
  2907   001572  0A00               	xorlw	0	; case 0
  2908   001574  B4D8               	btfsc	status,2,c
  2909   001576  EF59  F00A         	goto	i2l3542
  2910   00157A  0A01               	xorlw	1	; case 1
  2911   00157C  B4D8               	btfsc	status,2,c
  2912   00157E  EF84  F00A         	goto	i2l3544
  2913   001582  EFAC  F00A         	goto	i2l3546
  2914   001586                     i2l3550:
  2915                           
  2916                           ;MCAL/GPIO/gpio.c: 100:         pin->logic=pin_logic;
  2917   001586  5056               	movf	i2gpio_pin_logic_write@pin^0,w,c
  2918   001588  6ED9               	movwf	fsr2l,c
  2919   00158A  6ADA               	clrf	fsr2h,c
  2920   00158C  B057               	btfsc	i2gpio_pin_logic_write@pin_logic^0,0,c
  2921   00158E  D002               	bra	i2u278_45
  2922   001590  9EDF               	bcf	indf2,7,c
  2923   001592  D001               	bra	i2u278_46
  2924   001594                     i2u278_45:
  2925   001594  8EDF               	bsf	indf2,7,c
  2926   001596                     i2u278_46:
  2927   001596                     
  2928                           ;MCAL/GPIO/gpio.c: 101:         ret=(Std_ReturnType)0x01;
  2929   001596  0E01               	movlw	1
  2930   001598  6E5D               	movwf	i2gpio_pin_logic_write@ret^0,c
  2931   00159A                     i2l3554:
  2932                           
  2933                           ;MCAL/GPIO/gpio.c: 104:     return ret;
  2934   00159A  505D               	movf	i2gpio_pin_logic_write@ret^0,w,c
  2935   00159C  0012               	return		;funcret
  2936   00159E                     __end_ofi2_gpio_pin_logic_write:
  2937                           	callstack 0
  2938                           
  2939 ;; *************** function ___awmod *****************
  2940 ;; Defined at:
  2941 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  dividend        2    0[COMRAM] int 
  2944 ;;  divisor         2    2[COMRAM] int 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  sign            1    5[COMRAM] unsigned char 
  2947 ;;  counter         1    4[COMRAM] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  2    0[COMRAM] int 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;Total ram usage:        6 bytes
  2962 ;; Hardware stack levels used: 1
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_MY_TMR0_ISR
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text18
  2971   001662                     __ptext18:
  2972                           	callstack 0
  2973   001662                     ___awmod:
  2974                           	callstack 23
  2975   001662  0E00               	movlw	0
  2976   001664  6E5B               	movwf	___awmod@sign^0,c
  2977   001666  BE57               	btfsc	(___awmod@dividend+1)^0,7,c
  2978   001668  EF3A  F00B         	goto	i2u192_40
  2979   00166C  EF38  F00B         	goto	i2u192_41
  2980   001670                     i2u192_41:
  2981   001670  EF40  F00B         	goto	i2l2902
  2982   001674                     i2u192_40:
  2983   001674  6C56               	negf	___awmod@dividend^0,c
  2984   001676  1E57               	comf	(___awmod@dividend+1)^0,f,c
  2985   001678  B0D8               	btfsc	status,0,c
  2986   00167A  2A57               	incf	(___awmod@dividend+1)^0,f,c
  2987   00167C  0E01               	movlw	1
  2988   00167E  6E5B               	movwf	___awmod@sign^0,c
  2989   001680                     i2l2902:
  2990   001680  BE59               	btfsc	(___awmod@divisor+1)^0,7,c
  2991   001682  EF47  F00B         	goto	i2u193_40
  2992   001686  EF45  F00B         	goto	i2u193_41
  2993   00168A                     i2u193_41:
  2994   00168A  EF4B  F00B         	goto	i2l2906
  2995   00168E                     i2u193_40:
  2996   00168E  6C58               	negf	___awmod@divisor^0,c
  2997   001690  1E59               	comf	(___awmod@divisor+1)^0,f,c
  2998   001692  B0D8               	btfsc	status,0,c
  2999   001694  2A59               	incf	(___awmod@divisor+1)^0,f,c
  3000   001696                     i2l2906:
  3001   001696  5058               	movf	___awmod@divisor^0,w,c
  3002   001698  1059               	iorwf	(___awmod@divisor+1)^0,w,c
  3003   00169A  B4D8               	btfsc	status,2,c
  3004   00169C  EF52  F00B         	goto	i2u194_41
  3005   0016A0  EF54  F00B         	goto	i2u194_40
  3006   0016A4                     i2u194_41:
  3007   0016A4  EF78  F00B         	goto	i2l2922
  3008   0016A8                     i2u194_40:
  3009   0016A8  0E01               	movlw	1
  3010   0016AA  6E5A               	movwf	___awmod@counter^0,c
  3011   0016AC  EF5C  F00B         	goto	i2l2912
  3012   0016B0                     i2l2910:
  3013   0016B0  90D8               	bcf	status,0,c
  3014   0016B2  3658               	rlcf	___awmod@divisor^0,f,c
  3015   0016B4  3659               	rlcf	(___awmod@divisor+1)^0,f,c
  3016   0016B6  2A5A               	incf	___awmod@counter^0,f,c
  3017   0016B8                     i2l2912:
  3018   0016B8  AE59               	btfss	(___awmod@divisor+1)^0,7,c
  3019   0016BA  EF61  F00B         	goto	i2u195_41
  3020   0016BE  EF63  F00B         	goto	i2u195_40
  3021   0016C2                     i2u195_41:
  3022   0016C2  EF58  F00B         	goto	i2l2910
  3023   0016C6                     i2u195_40:
  3024   0016C6                     i2l2914:
  3025   0016C6  5058               	movf	___awmod@divisor^0,w,c
  3026   0016C8  5C56               	subwf	___awmod@dividend^0,w,c
  3027   0016CA  5059               	movf	(___awmod@divisor+1)^0,w,c
  3028   0016CC  5857               	subwfb	(___awmod@dividend+1)^0,w,c
  3029   0016CE  A0D8               	btfss	status,0,c
  3030   0016D0  EF6C  F00B         	goto	i2u196_41
  3031   0016D4  EF6E  F00B         	goto	i2u196_40
  3032   0016D8                     i2u196_41:
  3033   0016D8  EF72  F00B         	goto	i2l2918
  3034   0016DC                     i2u196_40:
  3035   0016DC  5058               	movf	___awmod@divisor^0,w,c
  3036   0016DE  5E56               	subwf	___awmod@dividend^0,f,c
  3037   0016E0  5059               	movf	(___awmod@divisor+1)^0,w,c
  3038   0016E2  5A57               	subwfb	(___awmod@dividend+1)^0,f,c
  3039   0016E4                     i2l2918:
  3040   0016E4  90D8               	bcf	status,0,c
  3041   0016E6  3259               	rrcf	(___awmod@divisor+1)^0,f,c
  3042   0016E8  3258               	rrcf	___awmod@divisor^0,f,c
  3043   0016EA  2E5A               	decfsz	___awmod@counter^0,f,c
  3044   0016EC  EF63  F00B         	goto	i2l2914
  3045   0016F0                     i2l2922:
  3046   0016F0  505B               	movf	___awmod@sign^0,w,c
  3047   0016F2  B4D8               	btfsc	status,2,c
  3048   0016F4  EF7E  F00B         	goto	i2u197_41
  3049   0016F8  EF80  F00B         	goto	i2u197_40
  3050   0016FC                     i2u197_41:
  3051   0016FC  EF84  F00B         	goto	i2l2926
  3052   001700                     i2u197_40:
  3053   001700  6C56               	negf	___awmod@dividend^0,c
  3054   001702  1E57               	comf	(___awmod@dividend+1)^0,f,c
  3055   001704  B0D8               	btfsc	status,0,c
  3056   001706  2A57               	incf	(___awmod@dividend+1)^0,f,c
  3057   001708                     i2l2926:
  3058   001708  C056  F056         	movff	___awmod@dividend,?___awmod
  3059   00170C  C057  F057         	movff	___awmod@dividend+1,?___awmod+1
  3060   001710  0012               	return		;funcret
  3061   001712                     __end_of___awmod:
  3062                           	callstack 0
  3063                           
  3064 ;; *************** function ___awdiv *****************
  3065 ;; Defined at:
  3066 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  dividend        2    0[COMRAM] int 
  3069 ;;  divisor         2    2[COMRAM] int 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  quotient        2    6[COMRAM] int 
  3072 ;;  sign            1    5[COMRAM] unsigned char 
  3073 ;;  counter         1    4[COMRAM] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2    0[COMRAM] int 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;Total ram usage:        8 bytes
  3088 ;; Hardware stack levels used: 1
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_MY_TMR0_ISR
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text19
  3097   00159E                     __ptext19:
  3098                           	callstack 0
  3099   00159E                     ___awdiv:
  3100                           	callstack 23
  3101   00159E  0E00               	movlw	0
  3102   0015A0  6E5B               	movwf	___awdiv@sign^0,c
  3103   0015A2  BE59               	btfsc	(___awdiv@divisor+1)^0,7,c
  3104   0015A4  EFD8  F00A         	goto	i2u186_40
  3105   0015A8  EFD6  F00A         	goto	i2u186_41
  3106   0015AC                     i2u186_41:
  3107   0015AC  EFDE  F00A         	goto	i2l2858
  3108   0015B0                     i2u186_40:
  3109   0015B0  6C58               	negf	___awdiv@divisor^0,c
  3110   0015B2  1E59               	comf	(___awdiv@divisor+1)^0,f,c
  3111   0015B4  B0D8               	btfsc	status,0,c
  3112   0015B6  2A59               	incf	(___awdiv@divisor+1)^0,f,c
  3113   0015B8  0E01               	movlw	1
  3114   0015BA  6E5B               	movwf	___awdiv@sign^0,c
  3115   0015BC                     i2l2858:
  3116   0015BC  BE57               	btfsc	(___awdiv@dividend+1)^0,7,c
  3117   0015BE  EFE5  F00A         	goto	i2u187_40
  3118   0015C2  EFE3  F00A         	goto	i2u187_41
  3119   0015C6                     i2u187_41:
  3120   0015C6  EFEB  F00A         	goto	i2l2864
  3121   0015CA                     i2u187_40:
  3122   0015CA  6C56               	negf	___awdiv@dividend^0,c
  3123   0015CC  1E57               	comf	(___awdiv@dividend+1)^0,f,c
  3124   0015CE  B0D8               	btfsc	status,0,c
  3125   0015D0  2A57               	incf	(___awdiv@dividend+1)^0,f,c
  3126   0015D2  0E01               	movlw	1
  3127   0015D4  1A5B               	xorwf	___awdiv@sign^0,f,c
  3128   0015D6                     i2l2864:
  3129   0015D6  0E00               	movlw	0
  3130   0015D8  6E5D               	movwf	(___awdiv@quotient+1)^0,c
  3131   0015DA  0E00               	movlw	0
  3132   0015DC  6E5C               	movwf	___awdiv@quotient^0,c
  3133   0015DE  5058               	movf	___awdiv@divisor^0,w,c
  3134   0015E0  1059               	iorwf	(___awdiv@divisor+1)^0,w,c
  3135   0015E2  B4D8               	btfsc	status,2,c
  3136   0015E4  EFF6  F00A         	goto	i2u188_41
  3137   0015E8  EFF8  F00A         	goto	i2u188_40
  3138   0015EC                     i2u188_41:
  3139   0015EC  EF20  F00B         	goto	i2l2886
  3140   0015F0                     i2u188_40:
  3141   0015F0  0E01               	movlw	1
  3142   0015F2  6E5A               	movwf	___awdiv@counter^0,c
  3143   0015F4  EF00  F00B         	goto	i2l2872
  3144   0015F8                     i2l2870:
  3145   0015F8  90D8               	bcf	status,0,c
  3146   0015FA  3658               	rlcf	___awdiv@divisor^0,f,c
  3147   0015FC  3659               	rlcf	(___awdiv@divisor+1)^0,f,c
  3148   0015FE  2A5A               	incf	___awdiv@counter^0,f,c
  3149   001600                     i2l2872:
  3150   001600  AE59               	btfss	(___awdiv@divisor+1)^0,7,c
  3151   001602  EF05  F00B         	goto	i2u189_41
  3152   001606  EF07  F00B         	goto	i2u189_40
  3153   00160A                     i2u189_41:
  3154   00160A  EFFC  F00A         	goto	i2l2870
  3155   00160E                     i2u189_40:
  3156   00160E                     i2l2874:
  3157   00160E  90D8               	bcf	status,0,c
  3158   001610  365C               	rlcf	___awdiv@quotient^0,f,c
  3159   001612  365D               	rlcf	(___awdiv@quotient+1)^0,f,c
  3160   001614  5058               	movf	___awdiv@divisor^0,w,c
  3161   001616  5C56               	subwf	___awdiv@dividend^0,w,c
  3162   001618  5059               	movf	(___awdiv@divisor+1)^0,w,c
  3163   00161A  5857               	subwfb	(___awdiv@dividend+1)^0,w,c
  3164   00161C  A0D8               	btfss	status,0,c
  3165   00161E  EF13  F00B         	goto	i2u190_41
  3166   001622  EF15  F00B         	goto	i2u190_40
  3167   001626                     i2u190_41:
  3168   001626  EF1A  F00B         	goto	i2l2882
  3169   00162A                     i2u190_40:
  3170   00162A  5058               	movf	___awdiv@divisor^0,w,c
  3171   00162C  5E56               	subwf	___awdiv@dividend^0,f,c
  3172   00162E  5059               	movf	(___awdiv@divisor+1)^0,w,c
  3173   001630  5A57               	subwfb	(___awdiv@dividend+1)^0,f,c
  3174   001632  805C               	bsf	___awdiv@quotient^0,0,c
  3175   001634                     i2l2882:
  3176   001634  90D8               	bcf	status,0,c
  3177   001636  3259               	rrcf	(___awdiv@divisor+1)^0,f,c
  3178   001638  3258               	rrcf	___awdiv@divisor^0,f,c
  3179   00163A  2E5A               	decfsz	___awdiv@counter^0,f,c
  3180   00163C  EF07  F00B         	goto	i2l2874
  3181   001640                     i2l2886:
  3182   001640  505B               	movf	___awdiv@sign^0,w,c
  3183   001642  B4D8               	btfsc	status,2,c
  3184   001644  EF26  F00B         	goto	i2u191_41
  3185   001648  EF28  F00B         	goto	i2u191_40
  3186   00164C                     i2u191_41:
  3187   00164C  EF2C  F00B         	goto	i2l2890
  3188   001650                     i2u191_40:
  3189   001650  6C5C               	negf	___awdiv@quotient^0,c
  3190   001652  1E5D               	comf	(___awdiv@quotient+1)^0,f,c
  3191   001654  B0D8               	btfsc	status,0,c
  3192   001656  2A5D               	incf	(___awdiv@quotient+1)^0,f,c
  3193   001658                     i2l2890:
  3194   001658  C05C  F056         	movff	___awdiv@quotient,?___awdiv
  3195   00165C  C05D  F057         	movff	___awdiv@quotient+1,?___awdiv+1
  3196   001660  0012               	return		;funcret
  3197   001662                     __end_of___awdiv:
  3198                           	callstack 0
  3199                           
  3200                           	psect	text20
  3201   000000                     __ptext20:
  3202                           	callstack 0
  3203   000000                     
  3204                           	psect	rparam
  3205   000000                     
  3206                           	psect	temp
  3207   00006B                     btemp:
  3208                           	callstack 0
  3209   00006B                     	ds	1
  3210   000000                     int$flags	set	btemp
  3211   000000                     wtemp8	set	btemp+1
  3212   000000                     ttemp5	set	btemp+1
  3213   000000                     ttemp6	set	btemp+4
  3214   000000                     ttemp7	set	btemp+8
  3215                           
  3216                           	psect	config
  3217                           
  3218                           ; Padding undefined space
  3219   300000                     	org	3145728
  3220   300000  FF                 	db	255
  3221                           
  3222                           ;Config register CONFIG1H @ 0x300001
  3223                           ;	Oscillator Selection bits
  3224                           ;	OSC = HS, HS oscillator
  3225                           ;	Fail-Safe Clock Monitor Enable bit
  3226                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3227                           ;	Internal/External Oscillator Switchover bit
  3228                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3229   300001                     	org	3145729
  3230   300001  02                 	db	2
  3231                           
  3232                           ;Config register CONFIG2L @ 0x300002
  3233                           ;	Power-up Timer Enable bit
  3234                           ;	PWRT = OFF, PWRT disabled
  3235                           ;	Brown-out Reset Enable bits
  3236                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3237                           ;	Brown Out Reset Voltage bits
  3238                           ;	BORV = 1, 
  3239   300002                     	org	3145730
  3240   300002  09                 	db	9
  3241                           
  3242                           ;Config register CONFIG2H @ 0x300003
  3243                           ;	Watchdog Timer Enable bit
  3244                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3245                           ;	Watchdog Timer Postscale Select bits
  3246                           ;	WDTPS = 32768, 1:32768
  3247   300003                     	org	3145731
  3248   300003  1E                 	db	30
  3249                           
  3250                           ; Padding undefined space
  3251   300004                     	org	3145732
  3252   300004  FF                 	db	255
  3253                           
  3254                           ;Config register CONFIG3H @ 0x300005
  3255                           ;	CCP2 MUX bit
  3256                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3257                           ;	PORTB A/D Enable bit
  3258                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3259                           ;	Low-Power Timer1 Oscillator Enable bit
  3260                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3261                           ;	MCLR Pin Enable bit
  3262                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3263   300005                     	org	3145733
  3264   300005  81                 	db	129
  3265                           
  3266                           ;Config register CONFIG4L @ 0x300006
  3267                           ;	Stack Full/Underflow Reset Enable bit
  3268                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3269                           ;	Single-Supply ICSP Enable bit
  3270                           ;	LVP = OFF, Single-Supply ICSP disabled
  3271                           ;	Extended Instruction Set Enable bit
  3272                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3273                           ;	Background Debugger Enable bit
  3274                           ;	DEBUG = 0x1, unprogrammed default
  3275   300006                     	org	3145734
  3276   300006  81                 	db	129
  3277                           
  3278                           ; Padding undefined space
  3279   300007                     	org	3145735
  3280   300007  FF                 	db	255
  3281                           
  3282                           ;Config register CONFIG5L @ 0x300008
  3283                           ;	Code Protection bit
  3284                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3285                           ;	Code Protection bit
  3286                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3287                           ;	Code Protection bit
  3288                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3289                           ;	Code Protection bit
  3290                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3291   300008                     	org	3145736
  3292   300008  0F                 	db	15
  3293                           
  3294                           ;Config register CONFIG5H @ 0x300009
  3295                           ;	Boot Block Code Protection bit
  3296                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3297                           ;	Data EEPROM Code Protection bit
  3298                           ;	CPD = OFF, Data EEPROM not code-protected
  3299   300009                     	org	3145737
  3300   300009  C0                 	db	192
  3301                           
  3302                           ;Config register CONFIG6L @ 0x30000A
  3303                           ;	Write Protection bit
  3304                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3305                           ;	Write Protection bit
  3306                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3307                           ;	Write Protection bit
  3308                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3309                           ;	Write Protection bit
  3310                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3311   30000A                     	org	3145738
  3312   30000A  0F                 	db	15
  3313                           
  3314                           ;Config register CONFIG6H @ 0x30000B
  3315                           ;	Configuration Register Write Protection bit
  3316                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3317                           ;	Boot Block Write Protection bit
  3318                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3319                           ;	Data EEPROM Write Protection bit
  3320                           ;	WRTD = OFF, Data EEPROM not write-protected
  3321   30000B                     	org	3145739
  3322   30000B  E0                 	db	224
  3323                           
  3324                           ;Config register CONFIG7L @ 0x30000C
  3325                           ;	Table Read Protection bit
  3326                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3327                           ;	Table Read Protection bit
  3328                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3329                           ;	Table Read Protection bit
  3330                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3331                           ;	Table Read Protection bit
  3332                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3333   30000C                     	org	3145740
  3334   30000C  0F                 	db	15
  3335                           
  3336                           ;Config register CONFIG7H @ 0x30000D
  3337                           ;	Boot Block Table Read Protection bit
  3338                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3339   30000D                     	org	3145741
  3340   30000D  40                 	db	64
  3341                           tosu	equ	0xFFF
  3342                           tosh	equ	0xFFE
  3343                           tosl	equ	0xFFD
  3344                           stkptr	equ	0xFFC
  3345                           pclatu	equ	0xFFB
  3346                           pclath	equ	0xFFA
  3347                           pcl	equ	0xFF9
  3348                           tblptru	equ	0xFF8
  3349                           tblptrh	equ	0xFF7
  3350                           tblptrl	equ	0xFF6
  3351                           tablat	equ	0xFF5
  3352                           prodh	equ	0xFF4
  3353                           prodl	equ	0xFF3
  3354                           indf0	equ	0xFEF
  3355                           postinc0	equ	0xFEE
  3356                           postdec0	equ	0xFED
  3357                           preinc0	equ	0xFEC
  3358                           plusw0	equ	0xFEB
  3359                           fsr0h	equ	0xFEA
  3360                           fsr0l	equ	0xFE9
  3361                           wreg	equ	0xFE8
  3362                           indf1	equ	0xFE7
  3363                           postinc1	equ	0xFE6
  3364                           postdec1	equ	0xFE5
  3365                           preinc1	equ	0xFE4
  3366                           plusw1	equ	0xFE3
  3367                           fsr1h	equ	0xFE2
  3368                           fsr1l	equ	0xFE1
  3369                           bsr	equ	0xFE0
  3370                           indf2	equ	0xFDF
  3371                           postinc2	equ	0xFDE
  3372                           postdec2	equ	0xFDD
  3373                           preinc2	equ	0xFDC
  3374                           plusw2	equ	0xFDB
  3375                           fsr2h	equ	0xFDA
  3376                           fsr2l	equ	0xFD9
  3377                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        70
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     21     106
    BANK0           128     15      42
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_init@pin	PTR struct . size(1) Largest target is 5
		 -> led_green(COMRAM[2]), led_red(COMRAM[2]), led_yellow(COMRAM[2]), seg_green1(COMRAM[5]), 
		 -> seg_green1$seven_segment_pins(COMRAM[4]), seg_green2(COMRAM[5]), seg_green2$seven_segment_pins(COMRAM[4]), seg_red1(COMRAM[5]), 
		 -> seg_red1$seven_segment_pins(COMRAM[4]), seg_red2(COMRAM[5]), seg_red2$seven_segment_pins(COMRAM[4]), 

    gpio_pin_logic_write@pin	PTR struct . size(1) Largest target is 5
		 -> led_green(COMRAM[2]), led_red(COMRAM[2]), led_yellow(COMRAM[2]), seg_green1(COMRAM[5]), 
		 -> seg_green1$seven_segment_pins(COMRAM[4]), seg_green2(COMRAM[5]), seg_green2$seven_segment_pins(COMRAM[4]), seg_red1(COMRAM[5]), 
		 -> seg_red1$seven_segment_pins(COMRAM[4]), seg_red2(COMRAM[5]), seg_red2$seven_segment_pins(COMRAM[4]), 

    gpio_pin_output_low_init@pin	PTR struct . size(1) Largest target is 5
		 -> led_green(COMRAM[2]), led_red(COMRAM[2]), led_yellow(COMRAM[2]), seg_green1(COMRAM[5]), 
		 -> seg_green1$seven_segment_pins(COMRAM[4]), seg_green2(COMRAM[5]), seg_green2$seven_segment_pins(COMRAM[4]), seg_red1(COMRAM[5]), 
		 -> seg_red1$seven_segment_pins(COMRAM[4]), seg_red2(COMRAM[5]), seg_red2$seven_segment_pins(COMRAM[4]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    interrupt_INTx_clear_flag@_interrupt$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_disable@_interrupt$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_edge_init@_interrupt$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_enable@_interrupt$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_pin_init@_interrupt$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_init@_interrupt$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_init@_interrupt$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@_interrupt$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@_interrupt$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    INTx_select_InterruptHandler@_interrupt$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    latx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    led_init@led	PTR struct . size(1) Largest target is 2
		 -> led_green(COMRAM[2]), led_red(COMRAM[2]), led_yellow(COMRAM[2]), 

    led_off@led	PTR struct . size(1) Largest target is 2
		 -> led_green(COMRAM[2]), led_red(COMRAM[2]), led_yellow(COMRAM[2]), 

    led_on@led	PTR struct . size(1) Largest target is 2
		 -> led_green(COMRAM[2]), led_red(COMRAM[2]), led_yellow(COMRAM[2]), 

    portx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    RB4_InterruptHandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RBx_select_InterruptHandler@_interrupt$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RBx_select_InterruptHandler@_interrupt$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S1737$buffer	PTR unsigned char  size(2) Largest target is 0

    S1737$source	PTR const unsigned char  size(2) Largest target is 0

    S580$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S751$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S751$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S986$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_TMR0_ISR(), 

    seven_segment_init@seg	PTR struct . size(1) Largest target is 5
		 -> seg_green1(COMRAM[5]), seg_green2(COMRAM[5]), seg_red1(COMRAM[5]), seg_red2(COMRAM[5]), 

    seven_segment_write@seg	PTR struct . size(1) Largest target is 5
		 -> seg_green1(COMRAM[5]), seg_green2(COMRAM[5]), seg_red1(COMRAM[5]), seg_red2(COMRAM[5]), 

    sp__memset	PTR void  size(1) Largest target is 1
		 -> lcd_send_number@number(COMRAM[1]), lcd_send_number_pos@number(COMRAM[1]), 

    timer0$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_TMR0_ISR(), 

    Timer0_Init@_timer	PTR const struct . size(1) Largest target is 7
		 -> timer0(BANK0[7]), 

    Timer0_Init@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_TMR0_ISR(), 

    Timer0_Mode_Select@_timer	PTR const struct . size(1) Largest target is 7
		 -> timer0(BANK0[7]), 

    Timer0_Mode_Select@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_TMR0_ISR(), 

    Timer0_Prescaler_Config@_timer	PTR const struct . size(1) Largest target is 7
		 -> timer0(BANK0[7]), 

    Timer0_Prescaler_Config@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_TMR0_ISR(), 

    Timer0_Register_Size_Config@_timer	PTR const struct . size(1) Largest target is 7
		 -> timer0(BANK0[7]), 

    Timer0_Register_Size_Config@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_TMR0_ISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_TMR0_ISR(), NULL(), 

    trisx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRhlll[1]), TRISC(BITBIGSFRhlll[1]), TRISD(BITBIGSFRhlll[1]), 
		 -> TRISE(BITBIGSFRhlll[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    _MY_TMR0_ISR->_seven_segment_write
    _seven_segment_write->___awdiv
    _seven_segment_write->i2_gpio_pin_logic_write
    _led_on->i2_gpio_pin_logic_write
    _led_off->i2_gpio_pin_logic_write

Critical Paths under _main in BANK0

    _init->_led_init
    _init->_seven_segment_init
    _seven_segment_init->_gpio_pin_output_low_init
    _led_init->_gpio_pin_output_low_init
    _gpio_pin_output_low_init->_gpio_pin_direction_init
    _gpio_pin_output_low_init->_gpio_pin_logic_write
    _Timer0_Init->_Timer0_Prescaler_Config

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8780
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 1     1      0    8780
                        _Timer0_Init
                           _led_init
                 _seven_segment_init
 ---------------------------------------------------------------------------------
 (2) _seven_segment_init                                   3     2      1    3927
                                             12 BANK0      3     2      1
           _gpio_pin_output_low_init
 ---------------------------------------------------------------------------------
 (2) _led_init                                             3     2      1    3899
                                             12 BANK0      3     2      1
           _gpio_pin_output_low_init
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_output_low_init                             4     3      1    3459
                                              8 BANK0      4     3      1
            _gpio_pin_direction_init
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_logic_write                                 8     6      2    1943
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              8     6      2     893
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _Timer0_Init                                          4     3      1     927
                                              2 BANK0      4     3      1
                 _Timer0_Mode_Select
            _Timer0_Prescaler_Config
        _Timer0_Register_Size_Config
 ---------------------------------------------------------------------------------
 (3) _Timer0_Register_Size_Config                          1     0      1     152
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (3) _Timer0_Prescaler_Config                              2     1      1     183
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _Timer0_Mode_Select                                   1     0      1     214
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptManager                                     8     8      0    6028
                                             13 COMRAM     8     8      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0    6028
                                NULL *
                        _MY_TMR0_ISR *
 ---------------------------------------------------------------------------------
 (7) _MY_TMR0_ISR                                          0     0      0    6028
                            ___awdiv
                            ___awmod
                            _led_off
                             _led_on
                _seven_segment_write
 ---------------------------------------------------------------------------------
 (8) _seven_segment_write                                  6     4      2    2506
                                              8 COMRAM     5     3      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
             i2_gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (8) _led_on                                               3     2      1    1069
                                              8 COMRAM     2     1      1
             i2_gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (8) _led_off                                              3     2      1    1249
                                              8 COMRAM     2     1      1
             i2_gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (9) i2_gpio_pin_logic_write                               8     6      2     563
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _Timer0_Init
       _Timer0_Mode_Select
       _Timer0_Prescaler_Config
       _Timer0_Register_Size_Config
     _led_init
       _gpio_pin_output_low_init
         _gpio_pin_direction_init
         _gpio_pin_logic_write
     _seven_segment_init
       _gpio_pin_output_low_init

 _InterruptManager (ROOT)
   _TMR0_ISR
     NULL(Fake) *
     _MY_TMR0_ISR *
       ___awdiv
       ___awmod
       _led_off
         i2_gpio_pin_logic_write
       _led_on
         i2_gpio_pin_logic_write
       _seven_segment_write
         ___awdiv (ARG)
         ___awmod (ARG)
         i2_gpio_pin_logic_write (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      42        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      F      2A       5       32.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     15      6A       1       84.1%
BITBIGSFRhlll       3E      0       0      38        0.0%
BITBIGSFRhllhh      18      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlh          4      0       0      39        0.0%
BITBIGSFRll          4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      94      41        0.0%
DATA                 0      0      94       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 01 01:24:18 2023

                  ??_InterruptManager 0063                                     _n 0011  
         gpio_pin_output_low_init@pin 00A3           gpio_pin_output_low_init@ret 00A6  
                                  l10 1AEE                                    l13 1AF0  
                        ___awdiv@sign 005B                           _MY_TMR0_ISR 1006  
                                 l233 1468                                   l170 1A00  
                                 l252 132C                                   l273 18F0  
                                 l604 1A54                                   l613 181A  
                                 l609 181A                                   l619 1BC0  
                                 l581 17A2                                   l656 1C42  
                                 l657 1C42                                   l579 172C  
                                 l699 1AA6                ??_gpio_pin_logic_write 009D  
                                 _ret 004C                          ___awmod@sign 005B  
          seven_segment_init@gpio_ret 00A8                                   tosl 0FFD  
                                 wreg 0FE8             _RB5_InterruptHandler_high 0040  
                                l4210 143A                                  l3510 1370  
                                l4126 1C3E                                  l3520 1450  
                                l3512 1378                                  l3504 132E  
                                l4208 12FE                                  l3522 1462  
                                l3514 13D0                                  l3506 1340  
                                l3516 1422                                  l3524 1466  
                                l3508 1360                                  l3518 1426  
                                l3640 1A1E                                  l3480 1234  
                                l3650 17C4                                  l3642 1A3A  
                                l3490 1314                                  l3482 123C  
                                l3474 11F2                                  l3570 18EA  
                                l3562 188C                                  l3660 1814  
                                l3652 17DC                                  l3644 1A52  
                                l3636 1A02                                  l3492 1326  
                                l3484 1294                                  l3476 1204  
                                l3572 18EE                                  l3564 18A2  
                                l3740 19FA                                  l3732 19AE  
                                l3654 17DE                                  l3646 17A4  
                                l3638 1A1C                                  l3662 1B86  
                                l3750 172E                                  l3486 12E6  
                                l3494 132A                                  l3478 1224  
                                l3566 18C2                                  l3742 19FE  
                                l3734 19C4                                  l3670 1AA8  
                                l3656 17F6                                  l3648 17BE  
                                l3664 1BA0                                  l3760 1786  
                                l3752 1746                                  l3488 12EA  
                                l3568 18CA                                  l3736 19CC  
                                l3680 1ACA                                  l3672 1ABE  
                                l3920 1A6A                                  l3658 17FC  
                                l3666 1BA6                                  l3770 179C  
                                l3762 1788                                  l3754 1764  
                                l3746 1712                                  l3738 19D4  
                                l3682 1AD6                                  l3674 1AC6  
                                l3930 1A9C                                  l3922 1A74  
                                l3914 1A56                                  l3668 1BBE  
                                l3764 178A                                  l3756 1772  
                                l3772 17A0                                  l3748 1724  
                                l3684 1AD8                                  l3924 1A7E  
                                l3916 1A56                                  l3766 178C  
                                l3758 1784                                  l3686 1AE8  
                                l3926 1A88                                  l3918 1A60  
                                l3768 179A                                  l3928 1A92  
                                STR_1 1001                                  _LATA 0F89  
                                _LATB 0F8A                                  _LATC 0F8B  
                                _LATD 0F8C                                  _LATE 0F8D  
                                u3050 19C4                                  u3051 19C0  
                                u3060 19F6                                  u3061 19F0  
                                u3070 1724                                  u3071 1720  
                                u2610 1204                                  u3066 19F8  
                                u2611 1200                                  u2620 1224  
                                u2621 1220                                  u2630 1234  
                                u2631 1230                                  u2704 1396  
                                u2800 18C2                                  u2705 1392  
                                u2801 18BE                                  u2714 13EE  
                                u2715 13EA                                  u2900 1A1C  
                                u2644 125A                                  u2901 1A18  
                                u2725 145E                                  u2645 1256  
                                u2910 1A52                                  u2726 1462  
                                u2670 1340                                  u2654 12B2  
                                u2911 1A4E                                  u2671 133C  
                                u2655 12AE                                  u2920 17BE  
                                u2680 1360                                  u2921 17BA  
                                u2681 135C                                  u2665 1322  
                                u2930 17DC                                  u2690 1370  
                                u2666 1326                                  u2931 17D8  
                                u2691 136C                                  u2940 17F6  
                                u2941 17F2                                  u2950 1814  
                                u2790 18A2                                  u2951 1810  
                                u2791 189E                                  u2960 1BA0  
                                u2961 1B9C                                  u2970 1BBE  
                                u2971 1BBA                                  u2980 1ABE  
                                u2981 1ABA                                  u2990 1AE8  
                                u2991 1AE4                                  i2l24 188A  
                                _main 1C3E                                  _latx 0001  
                                _init 1A56                                  fsr1h 0FE2  
                                fsr2h 0FDA                                  indf1 0FE7  
                                indf2 0FDF                                  fsr1l 0FE1  
                                fsr2l 0FD9              ?_gpio_pin_direction_init 009B  
                                btemp 006B              _RB4_InterruptHandler_low 0042  
            _RB7_InterruptHandler_low 0036                                  prodh 0FF4  
                                prodl 0FF3                                  start 000E  
                         led_init@led 00A7                           led_init@ret 00A9  
                        ___param_bank 0000             ?_gpio_pin_output_low_init 00A3  
                               ?_main 0056                                 ?_init 0056  
                     __end_of___awdiv 1662                       __end_of___awmod 1712  
                     ___awdiv@divisor 0058                                 i2l252 159C  
                               i2l180 1B84                                 i2l175 1B3A  
                               i2l338 1934                                 i2l623 1BF6  
                               i2l672 11F0                                 i2l933 1660  
                               i2l946 1710                       ___awdiv@counter 005A  
                               _TMR0H 0FD7                                 _TMR0L 0FD6  
                               _PORTA 0F80                                 _PORTB 0F81  
                               _PORTC 0F82                                 _PORTD 0F83  
                               _PORTE 0F84                                 _TRISA 0F92  
                               _TRISB 0F93                                 _TRISC 0F94  
                               _TRISD 0F95                                 _TRISE 0F96  
                   Timer0_Init@_timer 009D                      __end_of_TMR0_ISR 1BF8  
                     __end_of_led_off 1B86                                 _portx 0080  
                               _trisx 008A                                 pclath 0FFA  
                               pclatu 0FFB                                 tablat 0FF5  
                               ttemp5 006C                                 ttemp6 006F  
                               ttemp7 0073                                 status 0FD8  
                               wtemp8 006C               _Timer0_Prescaler_Config 1A02  
                     __initialization 1958                          __end_of_main 1C4A  
                        __end_of_init 1AA8                                ??_main 00AA  
                       _green_counter 000B                                ??_init 00AA  
                       __activetblptr 0003                      ___awdiv@dividend 0056  
          seven_segment_write@counter 0052                                i2l4212 1570  
                              i2l4070 1930                lcd_send_number@counter 004F  
                              i2l4066 1914                                i2l2900 167C  
                              i2l3540 14AA                                i2l3620 1B3A  
                              i2l3612 1AF2                                i2l4068 1922  
                              i2l2910 16B0                                i2l2902 1680  
                              i2l3550 1586                                i2l3542 14B2  
                              i2l3534 146A                                i2l3630 1B60  
                              i2l3614 1B06                                i2l2920 16EA  
                              i2l2912 16B8                                i2l2904 168E  
                              i2l3552 1596                                i2l3544 1508  
                              i2l3536 147A                                i2l3632 1B84  
                              i2l3624 1B3C                                i2l3616 1B0A  
                              i2l3800 10DE                                i2l2850 159E  
                              i2l2914 16C6                                i2l2922 16F0  
                              i2l2906 1696                                i2l3546 1558  
                              i2l3554 159A                                i2l3538 149A  
                              i2l3626 1B50                                i2l3618 1B16  
                              i2l3810 111E                                i2l3802 10EE  
                              i2l2860 15CA                                i2l2852 15A2  
                              i2l2924 1700                                i2l2916 16DC  
                              i2l2908 16A8                                i2l3548 155C  
                              i2l3628 1B54                                i2l3580 1840  
                              i2l3820 119C                                i2l3812 112E  
                              i2l3804 1106                                i2l2870 15F8  
                              i2l2862 15D2                                i2l2854 15B0  
                              i2l2926 1708                                i2l2918 16E4  
                              i2l3590 1884                                i2l3582 1844  
                              i2l3830 11D6                                i2l3822 11A4  
                              i2l3814 113E                                i2l3806 110E  
                              i2l3910 1BCC                                i2l2880 1632  
                              i2l2872 1600                                i2l2864 15D6  
                              i2l2856 15B8                                i2l3584 1848  
                              i2l3576 181C                                i2l3832 11DE  
                              i2l3824 11B6                                i2l3808 1116  
                              i2l3816 117C                                i2l3912 1BDE  
                              i2l3904 1BC2                                i2l2890 1658  
                              i2l2882 1634                                i2l2874 160E  
                              i2l2866 15DE                                i2l2858 15BC  
                              i2l3594 188A                                i2l3578 1830  
                              i2l3834 11E6                                i2l3826 11BE  
                              i2l3818 118C                                i2l3906 1BC4  
                              i2l2884 163A                                i2l2876 1614  
                              i2l2868 15F0                                i2l3588 185C  
                              i2l3828 11CA                                i2l3836 11EE  
                              i2l3780 1026                                i2l3908 1BC8  
                              i2l2878 162A                                i2l2886 1640  
                              i2l2894 1662                                i2l3790 10A4  
                              i2l3782 1036                                i2l2888 1650  
                              i2l2896 1666                                i2l3792 10B4  
                              i2l3784 1046                                i2l3776 1006  
                              i2l2898 1674                                i2l3794 10BC  
                              i2l3786 1056                                i2l3778 1016  
                              i2l3796 10CC                                i2l3788 1094  
                              i2l3798 10CE                         ??_Timer0_Init 009E  
            ??i2_gpio_pin_logic_write 0058          ?_Timer0_Register_Size_Config 009B  
                    __end_of_led_init 1A02                             ??___awdiv 005A  
                           ??___awmod 005A     Timer0_Register_Size_Config@_timer 009B  
                              _led_on 1AF2                                clear_0 199E  
                    ___awdiv@quotient 005C                       ___awmod@divisor 0058  
                              _timer0 0094                                isa$std 0001  
                     ___awmod@counter 005A             seven_segment_init@counter 0053  
                           ??_led_off 005F                          __pdataCOMRAM 0001  
               seven_segment_init@seg 00A7                 seven_segment_init@ret 00A9  
                        __mediumconst 0000                                tblptrh 0FF7  
                              tblptrl 0FF6                                tblptru 0FF8  
                      fp__MY_TMR0_ISR 0000             ??_Timer0_Prescaler_Config 009C  
                          __accesstop 0080               __end_of__initialization 19A4  
                  _seven_segment_init 1AA8                         ___rparam_used 0001  
                      __pcstackCOMRAM 0056                   ?_seven_segment_init 00A7  
                        __pidataBANK0 1C23             i2gpio_pin_logic_write@pin 0056  
           i2gpio_pin_logic_write@ret 005D                             ?_TMR0_ISR 0056  
       ??_Timer0_Register_Size_Config 009C                          ?_MY_TMR0_ISR 0056  
                 __end_of_Timer0_Init 17A4                  ??_seven_segment_init 00A8  
               _INT0_InterruptHandler 004A                            ??_TMR0_ISR 0063  
                             ?_led_on 005E           seven_segment_write@gpio_ret 0062  
                    lcd_send_number@i 0050             _RB6_InterruptHandler_high 003C  
                           ?_led_init 00A7                            _led_yellow 0026  
            _RB6_InterruptHandler_low 003A                               __Hparam 0000  
                         _Timer0_Init 1712                               __Lparam 0000  
                             ___awdiv 159E                               ___awmod 1662  
                        __psmallconst 1000                               __pcinit 1958  
     i2gpio_pin_logic_write@pin_logic 0057         gpio_pin_logic_write@pin_logic 009C  
                             __ramtop 1000                               __ptext0 1C3E  
                             __ptext1 1A56                               __ptext2 1AA8  
                             __ptext3 19AE                               __ptext4 188C  
                             __ptext5 11F2                               __ptext6 132E  
                             __ptext7 1712                               __ptext8 1B86  
                             __ptext9 1A02                             _T0CONbits 0FD5  
                             _led_off 1B3C                               _led_red 002A  
                    ___awmod@dividend 0056                i2_gpio_pin_logic_write 146A  
                          _seg_green1 0017                            _seg_green2 0012  
                      __pintcode_body 18F2                            ??_led_init 00A8  
                end_of_initialization 19A4                        led_on@gpio_ret 005F  
                             int_func 18F2              _gpio_pin_output_low_init 188C  
                             postdec1 0FE5                               postdec2 0FDD  
                             postinc0 0FEE                               postinc2 0FDE  
               _INT1_InterruptHandler 0048                      _InterruptManager 0008  
       Timer0_Prescaler_Config@_timer 009B                   _seven_segment_write 181C  
    gpio_pin_output_low_init@gpio_ret 00A5                seven_segment_write@seg 005E  
          __end_of_Timer0_Mode_Select 181C                seven_segment_write@num 005F  
                          led_off@led 005E         convert_uint16_to_string@F3180 002C  
             _gpio_pin_direction_init 132E                  ?_seven_segment_write 005E  
                       __pidataCOMRAM 1BF8                        _timer0_preload 0032  
                      __end_of_led_on 1B3C                   start_initialization 1958  
               lcd_send_number@number 0055                              ??_led_on 005F  
                         __pdataBANK0 0080                 ??_seven_segment_write 0060  
           lcd_send_number_pos@number 0054                           __pbssCOMRAM 002C  
                       __pcstackBANK0 009B              ?_Timer0_Prescaler_Config 009B  
         lcd_send_custom_char@counter 0051                 _INT2_InterruptHandler 0046  
               _TMR0_InterruptHandler 0034                          ?_Timer0_Init 009D  
        __end_of_gpio_pin_logic_write 132E   __end_of_Timer0_Register_Size_Config 1BC2  
         _Timer0_Register_Size_Config 1B86             ??_gpio_pin_direction_init 009D  
                           __pintcode 0008                              ?___awdiv 0056  
                            ?___awmod 0056                             _led_green 0028  
             ?i2_gpio_pin_logic_write 0056                              ?_led_off 005E  
                         __smallconst 1000             _RB4_InterruptHandler_high 0044  
           _RB7_InterruptHandler_high 0038            ??_gpio_pin_output_low_init 00A4  
                            _RB4_Flag 0010                              _RB5_Flag 000F  
                            _RB6_Flag 000E                              _RB7_Flag 000D  
            _RB5_InterruptHandler_low 003E              __end_of_InterruptManager 1958  
                            i2u310_40 1046                              i2u310_41 1042  
                            i2u311_40 10A4                              i2u311_41 10A0  
                            i2u312_40 10B4                              i2u312_41 10B0  
                            i2u313_40 10CC                              i2u313_41 10C8  
                            i2u314_40 10DE                              i2u330_40 1BDE  
                            i2u314_41 10DA                              i2u330_41 1BDA  
                            i2u315_40 10EE                              i2u315_41 10EA  
                            i2u316_40 112E                              i2u308_40 1016  
                            i2u331_48 1BE4                              i2u316_41 112A  
                            i2u308_41 1012                              i2u331_49 1BF6  
                            i2u317_40 118C                              i2u309_40 1026  
                            i2u317_41 1188                              i2u309_41 1022  
                            i2u190_40 162A                              i2u318_40 119C  
                            i2u342_40 1922                              i2u190_41 1626  
                            i2u318_41 1198                              i2u342_41 191E  
                            i2u191_40 1650                              i2u319_40 11B6  
                            i2u343_40 1930                              i2u191_41 164C  
                            i2u319_41 11B2                              i2u343_41 192C  
                            i2u192_40 1674                              i2u192_41 1670  
                            i2u193_40 168E                              i2u273_40 147A  
                            i2u281_40 1830                              i2u193_41 168A  
                            i2u273_41 1476                              i2u281_41 182C  
                            i2u186_40 15B0                              i2u194_40 16A8  
                            i2u274_40 149A                              i2u282_40 1840  
                            i2u186_41 15AC                              i2u194_41 16A4  
                            i2u274_41 1496                              i2u282_41 183C  
                            i2u187_40 15CA                              i2u195_40 16C6  
                            i2u275_40 14AA                              i2u283_40 1858  
                            i2u187_41 15C6                              i2u195_41 16C2  
                            i2u275_41 14A6                              i2u283_41 1854  
                            i2u188_40 15F0                              i2u196_40 16DC  
                            i2u188_41 15EC                              i2u196_41 16D8  
                            i2u276_44 14D0                              i2u284_44 1874  
                            i2u276_45 14CC                              i2u284_45 1870  
                            i2u189_40 160E                              i2u197_40 1700  
                            i2u189_41 160A                              i2u197_41 16FC  
                            i2u277_44 1526                              i2u277_45 1522  
                            i2u286_40 1B06                              i2u286_41 1B02  
                            i2u278_45 1594                              i2u278_46 1596  
                            i2u287_40 1B36                              i2u287_41 1B30  
                            i2u287_46 1B38                              i2u288_40 1B50  
                            i2u288_41 1B4C                              i2u289_40 1B80  
                            i2u289_41 1B7A                              i2u289_46 1B82  
                            _TMR0_ISR 1BC2        __end_ofi2_gpio_pin_logic_write 159E  
     __end_of_Timer0_Prescaler_Config 1A56                             led_on@led 005E  
     __end_of_gpio_pin_direction_init 146A                           _INTCON2bits 0FF1  
                         _INTCON3bits 0FF0                             copy_data0 196C  
                           copy_data1 198C                              __Hrparam 0000  
gpio_pin_direction_init@pin_direction 009C                              __Lrparam 0000  
                       ??_MY_TMR0_ISR 0063            lcd_send_number_pos@counter 004D  
                lcd_send_number_pos@i 004E                    _Timer0_Mode_Select 17A4  
                _gpio_pin_logic_write 11F2                   ?_Timer0_Mode_Select 009B  
                            __ptext10 17A4                              __ptext20 0000  
                            __ptext12 1BC2                              __ptext13 1006  
                            __ptext14 181C                              __ptext15 1AF2  
                            __ptext16 1B3C                              __ptext17 146A  
                            __ptext18 1662                              __ptext19 159E  
                            _led_init 19AE                           _red_counter 000C  
                            _seg_red1 0021                              _seg_red2 001C  
                ??_Timer0_Mode_Select 009C                              isa$xinst 0000  
                            int$flags 006B                        Timer0_Init@ret 00A0  
            Timer0_Mode_Select@_timer 009B                            _INTCONbits 0FF2  
                 __end_of_MY_TMR0_ISR 11F2                 ?_gpio_pin_logic_write 009B  
                     led_off@gpio_ret 005F               gpio_pin_logic_write@pin 009B  
             gpio_pin_logic_write@ret 00A2      __end_of_gpio_pin_output_low_init 18F2  
                            intlevel2 0000           __end_of_seven_segment_write 188C  
          __end_of_seven_segment_init 1AF2            gpio_pin_direction_init@pin 009B  
          gpio_pin_direction_init@ret 00A2                      led_init@gpio_ret 00A8  
                   ?_InterruptManager 0056  
